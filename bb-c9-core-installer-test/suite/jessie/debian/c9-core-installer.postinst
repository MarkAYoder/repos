#!/bin/sh
#
# see: dh_installdeb(1)

set -e

package="c9-core-installer"

core_version="3.1.1380+git20160212"

sha256sum_tgz_0_10_x="40a024928684c8872949ae0ad7770137b460ec200e6fa45ce0ed7a9291ece6c9"
        wfile_0_10_x="c9-core_${core_version}-build.tar.xz"

sha256sum_tgz_0_12_x="687c962bcfb092d970c80ed820be86e97e27e86a953781895bbd8d162587432e"
        wfile_0_12_x="c9-core_${core_version}-build.tar.xz"

   sha256sum_tgz_4_x="606e2649c375e5fab1cd154bba18500aca612b80a513389c82ed683a2c8f8972"
           wfile_4_x="c9-core_${core_version}-build.tar.xz"

extract_dir="/opt/cloud9/build/"

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

export NODE_PATH=/usr/local/lib/node_modules

npm_options="--unsafe-perm=true --progress=false --loglevel=error --prefix /usr/local"

npm_actually_install () {
	echo "${package}:Installing: ${pkg}-${ver} (for ${npm_project})"
	TERM=dumb ${node_bin} ${npm_bin} install -g ${npm_options} ${pkg}@${ver}
	echo "${ver}" > "${NODE_PATH}/${pkg}/${pkg}.version"
	echo "${node_version}" > "${NODE_PATH}/${pkg}/${pkg}.node_version"
}

npm_check_n_install () {
	if [ ! -f "${NODE_PATH}/${pkg}/${pkg}.version" ] ; then
		npm_actually_install
	else
		unset old_version
		if [ -f "${NODE_PATH}/${pkg}/${pkg}.version" ] ; then
			old_version=$(cat "${NODE_PATH}/${pkg}/${pkg}.version" || true)
		fi
		if [ ! "x${old_version}" = "x${ver}" ] ; then
			rm -rf "${NODE_PATH}/${pkg}/" || true
			npm_actually_install
		else
			unset old_version
			if [ -f "${NODE_PATH}/${pkg}/${pkg}.node_version" ] ; then
				old_version=$(cat "${NODE_PATH}/${pkg}/${pkg}.node_version" || true)
			fi
			if [ ! "x${old_version}" = "x${node_version}" ] ; then
				rm -rf "${NODE_PATH}/${pkg}/" || true
				npm_actually_install
			fi
		fi
	fi
}

npm_install () {
	node_bin="/usr/bin/nodejs"
	npm_bin="/usr/bin/npm"

	unset node_version
	node_version=$(/usr/bin/nodejs --version || true)

	#wheezy + jessie
	unset test_version
	if [ -f /usr/bin/nodejs-v0.10.x ] ; then
		test_version=$(/usr/bin/nodejs-v0.10.x --version || true)
		if [ "x${test_version}" = "x${node_version}" ] ; then
			node_bin="/usr/bin/nodejs-v0.10.x"
			if [ -f /usr/local/bin/npm ] ; then
				npm_bin="/usr/local/bin/npm"
			else
				npm_bin="/usr/bin/npm"
			fi
		fi
	fi

	#jessie + stretch
	unset test_version
	if [ -f /usr/bin/nodejs-v0.12.x ] ; then
		#/usr/bin/nodejs-v0.12.x
		#-> /usr/bin/npm (broken)
		#-> /usr/local/bin/npm (works)
		test_version=$(/usr/bin/nodejs-v0.12.x --version || true)
		if [ "x${test_version}" = "x${node_version}" ] ; then
			node_bin="/usr/bin/nodejs-v0.12.x"
			if [ -f /usr/local/bin/npm ] ; then
				npm_bin="/usr/local/bin/npm"
			else
				#bb-npm-installer would make sure this never happens...
				#nodejs-v0.12.x & /usr/bin/npm broken...
				node_bin="/usr/bin/nodejs-v0.10.x"
				npm_bin="/usr/bin/npm"
			fi
		fi
	fi

	echo "${package}:npm: [`${node_bin} ${npm_bin} --version`]"
	echo "${package}:node: [`${node_bin} --version`]"

	${node_bin} ${npm_bin} config set -g prefix /usr/local/

	npm_project="c9-core-installer"
	pkg="winston" ; ver="2.1.1" ; npm_check_n_install

	if [ -d /etc/avahi/ ] ; then
		#Annouce http server via DNS Sevice Discovery
		wfile="/etc/avahi/services/cloud9.service"
		echo "<?xml version=\"1.0\" standalone='no'?><!--*-nxml-*-->" > ${wfile}
		echo "<!DOCTYPE service-group SYSTEM \"avahi-service.dtd\">" >> ${wfile}
		echo "" >> ${wfile}
		echo "<!-- See avahi.service(5) for more information about this configuration file -->" >> ${wfile}
		echo "" >> ${wfile}
		echo "<service-group>" >> ${wfile}
		echo "" >> ${wfile}
		echo "  <name replace-wildcards=\"yes\">Cloud9 IDE for %h</name>" >> ${wfile}
		echo "  <service>" >> ${wfile}
		echo "" >> ${wfile}
		echo "    <type>_http._tcp</type>" >> ${wfile}
		echo "    <port>3000</port>" >> ${wfile}
		echo "  </service>" >> ${wfile}
		echo "" >> ${wfile}
		echo "</service-group>" >> ${wfile}
	fi
}

dl_file() {
	wget ${partner_url}/${wfile}
}

validdate_file() {
	sha256compare=$(sha256sum ${wfile} | awk '{print $1}')
	if [ ! "x${sha256compare}" = "x${sha256sum_tgz}" ] ; then
		rm -rf ${wfile}
		dl_file
		sha256compare=$(sha256sum ${wfile} | awk '{print $1}')
		if [ ! "x${sha256compare}" = "x${sha256sum_tgz}" ] ; then
			echo "dl failure"
			exit 1
		fi
	fi
}

dl_install() {
	unset node_version
	node_version=$(/usr/bin/nodejs --version || true)
	case "${node_version}" in
	v0.10.*)
		partner_url="https://rcn-ee.com/repos/git/archive/c9-core_v0.10.x"
		sha256sum_tgz=${sha256sum_tgz_0_10_x}
		wfile=${wfile_0_10_x}
		;;
	v0.12.*)
		partner_url="https://rcn-ee.com/repos/git/archive/c9-core_v0.12.x"
		sha256sum_tgz=${sha256sum_tgz_0_12_x}
		wfile=${wfile_0_12_x}
		;;
	v4.2.*|v4.3.*)
		partner_url="https://rcn-ee.com/repos/git/archive/c9-core_v4.x"
		sha256sum_tgz=${sha256sum_tgz_4_x}
		wfile=${wfile_4_x}
		;;
	*)
		partner_url="https://rcn-ee.com/repos/git/archive/c9-core_v4.x"
		sha256sum_tgz=${sha256sum_tgz_4_x}
		wfile=${wfile_4_x}
		;;
	esac

	if [ ! -d /var/cache/${package} ] ; then
		mkdir -p /var/cache/${package}
	fi

	cd /var/cache/${package}/

	if [ ! -f ${wfile} ] ; then
		dl_file
	fi

	if [ -f ${wfile} ] ; then
		validdate_file

		systemctl stop cloud9.socket || true

		if [ ! -d ${extract_dir} ] ; then
			mkdir -p ${extract_dir} || true
		fi

		echo "extracting: ${wfile}"
		tar xf ${wfile} -C ${extract_dir}
		chown -R 1000:1000 ${extract_dir}

		if [ ! -d /var/lib/cloud9 ] ; then
			mkdir -p /var/lib/cloud9 || true
		fi

		systemctl --system daemon-reload || true
	fi
}

c9_directory () {
	#Based on: https://github.com/c9/install
	C9_DIR=/root/.c9
	NPM=$C9_DIR/node/bin/npm
	NODE=$C9_DIR/node/bin/node
	PYTHON=python2.7

	VIRTUALENV_VERSION=virtualenv-12.0.7

	mkdir -p "$C9_DIR"/bin
	mkdir -p "$C9_DIR"/tmp
	mkdir -p "$C9_DIR"/lib/node_modules
	cd "$C9_DIR"

	#start install node tmux_install nak ptyjs vfsextend collab

	#node:
	mkdir -p "$C9_DIR"/node/bin
	ln -sf ${node_bin} "$C9_DIR"/node/bin/node
	ln -sf ${npm_bin} "$C9_DIR"/node/bin/

	node_bin="$C9_DIR/node/bin/node"
	npm_bin="$C9_DIR/node/bin/npm"

	echo "${package}:npm: [`${node_bin} ${npm_bin} --version`]"
	echo "${package}:node: [`${node_bin} --version`]"

	# use local npm cache
	${node_bin} ${npm_bin} config -g set cache "$C9_DIR/tmp/.npm"

	# node-gyp uses sytem node or fails with command not found if
	# we don't bump this node up in the path
	PATH="$C9_DIR/node/bin/:$C9_DIR/lib/node_modules/.bin:$PATH"

	if [ -d "$C9_DIR"/$VIRTUALENV_VERSION ] ; then
		rm -rf "$C9_DIR"/$VIRTUALENV_VERSION
	fi

	partner_url="https://rcn-ee.com/repos/git/archive/c9-npmbox"

	sha256sum_tgz="d681db1766cdc8aa1b37eb18252c264b775f971166c2bf658a9618c1f3d28741"
	wfile="virtualenv-12.0.7.tar.gz"

	cd /var/cache/${package}/
	if [ ! -f ${wfile} ] ; then
		dl_file
	fi

	if [ -f ${wfile} ] ; then
		validdate_file
	fi
	cd "$C9_DIR"

	tar xzf /var/cache/${package}/$VIRTUALENV_VERSION.tar.gz

	if [ -d "$C9_DIR"/python ] ; then
		rm -rf "$C9_DIR"/python
	fi

	echo ${package}:python
	"$PYTHON" virtualenv-12.0.7/virtualenv.py "$C9_DIR/python"
	PYTHON="$C9_DIR/python/bin/python"
	${node_bin} ${npm_bin} config -g set python "$PYTHON"

	#tmux_install
	ln -sf $(which tmux) "$C9_DIR"/bin/tmux

	export NODE_PATH=/root/.c9/lib/node_modules
	npm_options="--unsafe-perm=true --progress=false --loglevel=error --prefix /root/.c9"

	if [ -d /root/.c9/node_modules/simplefunc ] ; then
		rm -rf /root/.c9/node_modules/simplefunc || true
		rm -rf /root/.c9/node_modules/colors || true
		rm -rf /root/.c9/node_modules/isbinaryfile || true
		rm -rf /root/.c9/node_modules/nak || true
	fi

	if [ -d /root/.c9/node_modules/nak ] ; then
		rm -rf /root/.c9/node_modules/nak || true
	fi

	npm_project="c9-core-installer"
	pkg="nak" ; ver="0.3.3" ; npm_check_n_install

	npm_project="c9-core-installer"
	pkg="node-gyp" ; ver="2.0.2" ; npm_check_n_install

	if [ -d /root/.c9/node_modules/extend ] ; then
		rm -rf /root/.c9/node_modules/extend || true
		rm -rf /root/.c9/node_modules/nan || true
		rm -rf /root/.c9/node_modules/pty.js || true
	fi

	if [ -d /root/.c9/node_modules/pty.js ] ; then
		rm -rf /root/.c9/node_modules/pty.js || true
	fi

	npm_project="c9-core-installer"
	pkg="pty.js" ; ver="0.3.0" ; npm_check_n_install

	HASPTY=`"$C9_DIR/node/bin/node" -e "console.log(require('pty.js'))" | grep createTerminal | wc -l`
	if [ $HASPTY -ne 1 ]; then
	  echo "Unknown exception installing pty.js"
	  echo `"$C9_DIR/node/bin/node" -e "console.log(require('pty.js'))"`
	  exit 100
	fi

# vfsextend collab

	#Cleanup:
	${node_bin} ${npm_bin} config -g delete cache
	${node_bin} ${npm_bin} config -g delete tmp
	${node_bin} ${npm_bin} config -g delete python

	systemctl enable cloud9.socket || true
}

case "$1" in
    configure)
	npm_install
	dl_install
	c9_directory
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

