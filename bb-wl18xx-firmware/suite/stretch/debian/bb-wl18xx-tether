#!/bin/sh -e
#
# Copyright (c) 2016 Robert Nelson <robertcnelson@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

ap_interface="SoftAp0"
log="log:"
use_mac=""
ip_prefix="192.168.8"
ssid_prefix="BeagleBone"

connman_disable_tether () {
	if [ -d /sys/class/net/tether ] ; then
		if [ -d /sys/class/net/eth0 ] ; then
			echo "${log} Connman's tether enabled, but eth0 exists, leaving tether up and running..."
			exit 1
		else
			echo "${log} connmanctl tether wifi off"
			connmanctl tether wifi off
			sleep 1
		fi
	fi
}

create_softap0_interface () {
	if [ ! -d /sys/class/net/${ap_interface} ] ; then
		number_of_wlan=$(ls /sys/class/net/ | grep wlan | wc -l)

		if [ "x${number_of_wlan}" = "x1" ] ; then
			echo "${log} iw phy phy0 interface add ${ap_interface} type managed"
			iw phy phy0 interface add ${ap_interface} type managed

			p=$?
			if [ $p==0 ];then
				echo "${log} phy0 created "
			else
				echo "${log} Err: can't creat phy0 "
				exit 1
			fi

			sync

			if [ ! -d /sys/class/net/${ap_interface} ] ; then
				get_wl=$(ls /sys/class/net/ | grep wlx)
				echo "${log} ip link set dev ${get_wl} name ${ap_interface}"
				ip link set dev ${get_wl} name ${ap_interface}
			else
				#We really want to use ${ap_interface}
				sleep 2
				if [ ! -d /sys/class/net/${ap_interface} ] ; then
					get_wl=$(ls /sys/class/net/ | grep wlx)
					echo "${log} ip link set dev ${get_wl} name ${ap_interface}"
					ip link set dev ${get_wl} name ${ap_interface}
				fi
			fi
		fi
	fi
}

bringup_softap0_interface () {
	if [ -d /sys/class/net/${ap_interface} ] ; then
		#not all devices support mac address modifications...
		if [ ! "x${use_mac}" = "x" ] ; then
			echo "${log} ip link set dev ${ap_interface} down"
			ip link set dev ${ap_interface} down
			echo "${log} ip link set dev ${ap_interface} address ${use_mac}"
			ip link set dev ${ap_interface} address ${use_mac} || true
			echo "${log} ip link set dev ${ap_interface} up"
			ip link set dev ${ap_interface} up
		fi

		if [ ! "x${ip_prefix}" = "x" ] ; then
			get_ap_interface_ip=$(ip -f inet addr show ${ap_interface} | grep -Po 'inet \K[\d.]+' || true)
			if [ ! "x${get_ap_interface_ip}" = "x" ] ; then
				if [ ! "x${get_ap_interface_ip}" = "x${ip_prefix}.1" ] ; then
					echo "${log} ip addr flush dev ${ap_interface}"
					ip addr flush dev ${ap_interface}
				fi
			fi
			if [ ! "x${get_ap_interface_ip}" = "x${ip_prefix}.1" ] ; then
				echo "${log} ip addr add ${ip_prefix}.1/24 broadcast ${ip_prefix}.255 dev ${ap_interface}"
				ip addr add ${ip_prefix}.1/24 broadcast ${ip_prefix}.255 dev ${ap_interface}
			fi
		fi

		ip_forward=$(cat /proc/sys/net/ipv4/ip_forward)
		if [ "x${ip_forward}" = "x0" ] ; then
			echo 1 > /proc/sys/net/ipv4/ip_forward
			echo "${log} iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE"
			iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE
			echo "${log} iptables -A FORWARD -i wlan0 -o ${ap_interface} -m state --state RELATED,ESTABLISHED -j ACCEPT"
			iptables -A FORWARD -i wlan0 -o ${ap_interface} -m state --state RELATED,ESTABLISHED -j ACCEPT
			echo "${log} iptables -A FORWARD -i ${ap_interface} -o wlan0 -j ACCEPT"
			iptables -A FORWARD -i ${ap_interface} -o wlan0 -j ACCEPT
		fi
	fi
}

start_hostapd () {
	if [ ! "x${use_mac}" = "x" ] ; then
		ssid_append=$(echo ${use_mac} | cut -b 13-17 | sed 's/://g' || true)
	fi

	wfile="/tmp/hostapd-wl18xx.conf"
	echo "interface=SoftAp0" > ${wfile}

	if [ ! "x${use_mac}" = "x" ] ; then
		echo "ssid=${ssid_prefix}-${ssid_append}" >> ${wfile}
	else
		echo "ssid=${ssid_prefix}" >> ${wfile}
	fi

	echo "hw_mode=g" >> ${wfile}
	echo "channel=1" >> ${wfile}
	echo "wpa_passphrase=BeagleBone" >> ${wfile}

	echo "logger_syslog=-1" >> ${wfile}
	echo "logger_syslog_level=2" >> ${wfile}

	/usr/sbin/hostapd -B /tmp/hostapd-wl18xx.conf
}

disable_connman_dnsproxy () {
	unset check_connman
	check_connman=$(cat /lib/systemd/system/connman.service | grep ExecStart | grep nodnsproxy || true)
	if [ "x${check_connman}" = "x" ] ; then
		sed -i -e 's:connmand -n:connmand -n --nodnsproxy:g' /lib/systemd/system/connman.service || true
		systemctl restart connman || true
	fi
}

start_dnsmasq () {
	if [ -f /var/run/udhcpd.pid ] ; then
		/etc/init.d/udhcpd stop || true
	fi

	wfile="/etc/dnsmasq.d/SoftAp0"
	echo "interface=SoftAp0" > ${wfile}
	echo "interface=usb0" >> ${wfile}
	echo "port=53" >> ${wfile}
	echo "dhcp-authoritative" >> ${wfile}
	echo "domain-needed" >> ${wfile}
	echo "bogus-priv" >> ${wfile}
	echo "expand-hosts" >> ${wfile}
	echo "cache-size=2048" >> ${wfile}
	echo "dhcp-range=SoftAp0,192.168.8.50,192.168.8.150,12h" >> ${wfile}
	echo "dhcp-range=usb0,192.168.7.3,192.168.7.4,12h" >> ${wfile}
	echo "listen-address=127.0.0.1" >> ${wfile}
	echo "listen-address=192.168.8.1" >> ${wfile}
	echo "listen-address=192.168.7.2" >> ${wfile}
	echo "dhcp-option-force=interface:SoftAp0,option:dns-server,192.168.8.1" >> ${wfile}
	echo "dhcp-option-force=interface:SoftAp0,option:mtu,1500" >> ${wfile}
	echo "dhcp-option=usb0,3" >> ${wfile}
	echo "dhcp-option=usb0,6" >> ${wfile}
	echo "address=/#/172.1.8.1" >> ${wfile}

	systemctl restart dnsmasq || true
}

board=$(cat /proc/device-tree/model | sed "s/ /_/g")
case "${board}" in
TI_AM335x_BeagleBone_Green_Wireless)
	if [ -f /etc/cpsw_0_mac ] ; then
		use_mac=$(cat /etc/cpsw_0_mac)
	else
		use_mac="68:9E:19:8E:97:56"
	fi
	connman_disable_tether
	;;
TI_AM335x_BeagleBone_Black_Wireless)
	if [ -f /etc/cpsw_3_mac ] ; then
		use_mac=$(cat /etc/cpsw_3_mac)
	else
		use_mac="68:9E:19:8E:97:56"
	fi
	connman_disable_tether
	;;
TI_AM335x_BeagleBone_Blue)
	if [ -f /etc/cpsw_3_mac ] ; then
		use_mac=$(cat /etc/cpsw_3_mac)
	else
		use_mac="68:9E:19:8E:97:56"
	fi
	connman_disable_tether
	;;
*)
	;;
esac

create_softap0_interface
bringup_softap0_interface
start_hostapd
disable_connman_dnsproxy
start_dnsmasq

