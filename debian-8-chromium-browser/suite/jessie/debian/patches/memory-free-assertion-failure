--- a/third_party/WebKit/Source/wtf/allocator/PageAllocator.cpp
+++ b/third_party/WebKit/Source/wtf/allocator/PageAllocator.cpp
@@ -239,7 +239,9 @@ bool setSystemPagesAccessible(void* addr
 }
 
 void decommitSystemPages(void* addr, size_t len) {
-  ASSERT(!(len & kSystemPageOffsetMask));
+  if (len & kSystemPageOffsetMask) {
+    DLOG(WARNING) << "decommitSystemPages of length " << len << " is wrong becase bitwise of kSystemPageOffsetMask " << kSystemPageOffsetMask << " is nonzero";
+  }
 #if OS(POSIX)
   int ret = madvise(addr, len, MADV_FREE);
   RELEASE_ASSERT(!ret);
@@ -258,7 +260,9 @@ void recommitSystemPages(void* addr, siz
 }
 
 void discardSystemPages(void* addr, size_t len) {
-  ASSERT(!(len & kSystemPageOffsetMask));
+  if (len & kSystemPageOffsetMask) {
+    DLOG(WARNING) << "discardSystemPages of length " << len << " is wrong becase bitwise of kSystemPageOffsetMask " << kSystemPageOffsetMask << " is nonzero";
+  }
 #if OS(POSIX)
   // On POSIX, the implementation detail is that discard and decommit are the
   // same, and lead to pages that are returned to the system immediately and
