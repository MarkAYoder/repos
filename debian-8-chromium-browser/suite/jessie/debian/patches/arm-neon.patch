Description: GYP assumes ARMv7 always wants NEON, even if compile flags disable.
Origin: http://code.google.com/p/chromium/issues/detail?id=154107
Author: Chad Miller <chad.miller@canonical.com>
Bug-Chromium: 154107
Bug-Ubuntu: 1084852

--- a/third_party/opus/BUILD.gn
+++ b/third_party/opus/BUILD.gn
@@ -371,12 +371,9 @@ static_library("opus") {
         "src/celt/arm/arm_celt_map.c",
         "src/celt/arm/armcpu.c",
         "src/celt/arm/armcpu.h",
-        "src/celt/arm/celt_neon_intr.c",
         "src/celt/arm/fft_arm.h",
         "src/celt/arm/mdct_arm.h",
         "src/celt/arm/pitch_arm.h",
-        "src/silk/arm/NSQ_neon.c",
-        "src/silk/arm/NSQ_neon.h",
         "src/silk/arm/arm_silk_map.c",
       ]
 
@@ -385,8 +382,6 @@ static_library("opus") {
       defines += [
         "OPUS_ARM_MAY_HAVE_EDSP",
         "OPUS_ARM_MAY_HAVE_MEDIA",
-        "OPUS_ARM_MAY_HAVE_NEON",
-        "OPUS_ARM_MAY_HAVE_NEON_INTR",
         "OPUS_HAVE_RTCD",
       ]
 
--- a/third_party/webrtc/system_wrappers/source/cpu_features.cc
+++ b/third_party/webrtc/system_wrappers/source/cpu_features.cc
@@ -18,6 +18,47 @@
 
 #include "webrtc/typedefs.h"
 
+#include <elf.h>
+#ifdef __arm__
+#include <fcntl.h>
+#include <unistd.h>
+#include <linux/auxvec.h>
+#include <asm/hwcap.h>
+#endif
+
+#ifdef __arm__
+uint64_t WebRtc_GetCPUFeaturesARM() {
+	static bool detected = false;
+	static uint64_t have_neon = 0;
+
+	int fd;
+	Elf32_auxv_t auxv;
+	unsigned int hwcaps;
+
+	if (!detected) {
+		int fd;
+		Elf32_auxv_t auxv;
+		unsigned int hwcaps;
+
+		fd = open("/proc/self/auxv", O_RDONLY);
+		if (fd >= 0) {
+			while (read(fd, &auxv, sizeof(Elf32_auxv_t)) == sizeof(Elf32_auxv_t)) {
+				if (auxv.a_type == AT_HWCAP) {
+					have_neon = (auxv.a_un.a_val & HWCAP_NEON) ? kCPUFeatureNEON : 0;
+					break;
+				}
+			}
+			close (fd);
+		} else {
+			have_neon = 0;
+		}
+		detected = true;
+	}
+
+	return 0 | have_neon; // others here as we need them
+}
+#endif
+
 // No CPU feature is available => straight C path.
 int GetCPUInfoNoASM(CPUFeature feature) {
   (void)feature;
