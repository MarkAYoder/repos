#!/bin/sh
#
# see: dh_installdeb(1)

set -e

package="bb-node-red-installer"
service="node-red"

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

npm_pkg_install () {
	if [ -d /usr/local/lib/node_modules/${npm_project}/ ] ; then
		rm -rf /usr/local/lib/node_modules/${npm_project}/ || true
	fi
}

	echo "${package}:updating: /usr/local/lib/node_modules/${npm_project}/"
	tar xf /var/cache/${package}/${npm_file} -C /usr/local/lib/node_modules/
}

npm_install () {
	node_bin="/usr/bin/nodejs"
	npm_bin="/usr/bin/npm"

	unset node_version
	node_version=$(/usr/bin/nodejs --version || true)

	echo "${package}:npm: [`${node_bin} ${npm_bin} --version`]"
	echo "${package}:node: [`${node_bin} --version`]"

	npm_project="node-red"
	npm_file="node-red-0.13.4-3454e5a-v0.12.13.tar.xz"
	npm_pkg_install

	ln -sf /usr/local/lib/node_modules/node-red/red.js /usr/local/bin/node-red
	ln -sf /usr/local/lib/node_modules/node-red/bin/node-red-pi /usr/local/bin/node-red-pi

#	npm_project="node-red-node-beaglebone"
#	npm_file="node-red-node-beaglebone-0.1.6-966e7a5-v0.12.13.tar.xz"
#	npm_pkg_install

#	npm_project="node-red-node-bb-upm"
#	npm_file="node-red-node-bb-upm-0.0.0-d817d14-v0.12.13.tar.xz"
#	npm_pkg_install

	npm_project="node-red-node-mongodb"
	npm_file="node-red-node-mongodb-0.0.5-966e7a5-v0.12.13.tar.xz"
	npm_pkg_install

	if [ -d /usr/lib/node_modules/mraa ] ; then
		ln -sf /usr/lib/node_modules/mraa /usr/local/lib/node_modules || true
		ln -sf /usr/lib/node_modules/jsupm* /usr/local/lib/node_modules || true
	fi

	if [ -d /etc/avahi/services/ ] ; then
		#Annouce http server via DNS Sevice Discovery
		wfile="/etc/avahi/services/node-red.service"
		echo "<?xml version=\"1.0\" standalone='no'?><!--*-nxml-*-->" > ${wfile}
		echo "<!DOCTYPE service-group SYSTEM \"avahi-service.dtd\">" >> ${wfile}
		echo "" >> ${wfile}
		echo "<!-- See avahi.service(5) for more information about this configuration file -->" >> ${wfile}
		echo "" >> ${wfile}
		echo "<service-group>" >> ${wfile}
		echo "" >> ${wfile}
		echo "  <name replace-wildcards=\"yes\">Node-RED for %h</name>" >> ${wfile}
		echo "  <service>" >> ${wfile}
		echo "" >> ${wfile}
		echo "    <type>_http._tcp</type>" >> ${wfile}
		echo "    <port>1880</port>" >> ${wfile}
		echo "  </service>" >> ${wfile}
		echo "" >> ${wfile}
		echo "</service-group>" >> ${wfile}
		chown -R root:root ${wfile}
	fi

	systemctl enable ${service}.socket || true
	systemctl start ${service} || true
	echo "${package}:Installed"
}

case "$1" in
    configure)
	npm_install
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

