Description: adapt test-ci build target for buildd
 * run tests with ./node
 * remove addons from test-ci suite, because it creates a dependency loop
   nodejs -> node-gyp -> nodejs which is painful to manage.
 * disabled because it requires stdin:
   + test-stdout-close-unref
   + test-regress-GH-746
 * test-tick-processor fails on ppc64 and s390x, currently investigated
   https://github.com/nodejs/node/issues/2471
 * test-cluster-disconnect sometimes fails on busy buildd, forwarded upstream
   https://github.com/nodejs/node/issues/3383
 * test-fs-watch is flaky, might be related to https://github.com/nodejs/node/issues/4082
 * huge timeout value for all platforms, buildd could be busy
 * test-npm-install must fail, debian package dfsg-repacked npm out
 * ability to override CI_NATIVE_SUITES, CI_JS_SUITES
 * disable tests failing because DNS is disabled
Forwarded: not-needed
Last-Update: 2016-03-09
Author: Jérémy Lal <kapouer@melix.org>
--- a/Makefile
+++ b/Makefile
@@ -205,8 +205,8 @@
 test-all-valgrind: test-build
 	$(PYTHON) tools/test.py --mode=debug,release --valgrind
 
-CI_NATIVE_SUITES := addons
-CI_JS_SUITES := doctool inspector known_issues message parallel pseudo-tty sequential
+CI_NATIVE_SUITES ?= addons
+CI_JS_SUITES ?= doctool inspector known_issues message parallel pseudo-tty sequential
 
 # Build and test addons without building anything else
 test-ci-native: LOGLEVEL := info
@@ -217,7 +217,7 @@
 
 # This target should not use a native compiler at all
 test-ci-js: | clear-stalled
-	$(PYTHON) tools/test.py $(PARALLEL_ARGS) -p tap --logfile test.tap \
+	$(PYTHON) tools/test.py $(PARALLEL_ARGS) -p tap \
 		--mode=release --flaky-tests=$(FLAKY_TESTS) \
 		$(TEST_CI_ARGS) $(CI_JS_SUITES)
 	# Clean up any leftover processes, error if found.
--- a/test/parallel/parallel.status
+++ b/test/parallel/parallel.status
@@ -7,6 +7,22 @@
 [true] # This section applies to all platforms
 test-fs-read-buffer-tostring-fail      : PASS,FLAKY
 
+test-process-config                  : PASS,FLAKY
+test-regress-GH-746                  : PASS,FLAKY
+test-stdout-close-unref              : PASS,FLAKY
+test-npm-install                     : FAIL
+# skip tests accessing network
+test-dns                             : SKIP
+test-net-connect-immediate-finish    : SKIP
+test-net-better-error-messages-port-hostname : SKIP
+
+# in debian build env, skip because it somehow tries to access network
+test-https-connect-address-family : SKIP 
+test-tls-connect-address-family : SKIP
+
+# only works with zlib >= 1.2.11
+test-zlib-failed-init: SKIP
+
 test-tls-alert: SKIP
 
 [$system==win32]
@@ -26,4 +42,8 @@
 [$system==aix]
 #covered by  https://github.com/nodejs/node/issues/3796
 # but more frequent on AIX ?
-test-debug-signal-cluster                : PASS, FLAKY
\ No newline at end of file
+test-debug-signal-cluster                : PASS, FLAKY
+
+[$arch==mips64el]
+# the debug flag is for hacking v8 internals
+test-debug-args: PASS,FLAKY
--- a/test/sequential/sequential.status
+++ b/test/sequential/sequential.status
@@ -5,6 +5,8 @@
 # sample-test                       : PASS,FLAKY
 
 [true] # This section applies to all platforms
+test-fs-watch                                   : PASS,FLAKY
+test-force-repl                                 : SKIP
 
 [$system==win32]
 
--- a/tools/test.py
+++ b/tools/test.py
@@ -857,10 +857,7 @@
     self.abort_on_timeout = abort_on_timeout
 
   def GetVm(self, arch, mode):
-    if arch == 'none':
-      name = 'out/Debug/node' if mode == 'debug' else 'out/Release/node'
-    else:
-      name = 'out/%s.%s/node' % (arch, mode)
+    name = './node'
 
     # Currently GYP does not support output_dir for MSVS.
     # http://code.google.com/p/gyp/issues/detail?id=40
--- a/test/parallel/test-dgram-membership.js
+++ b/test/parallel/test-dgram-membership.js
@@ -58,30 +58,30 @@
 }
 
 // addMembership() with valid socket and multicast address should not throw
-{
-  const socket = setup();
-  assert.doesNotThrow(() => { socket.addMembership(multicastAddress); });
-  socket.close();
-}
+// {
+//   const socket = setup();
+//   assert.doesNotThrow(() => { socket.addMembership(multicastAddress); });
+//   socket.close();
+// }
 
 // dropMembership() without previous addMembership should throw
-{
-  const socket = setup();
-  assert.throws(
-    () => { socket.dropMembership(multicastAddress); },
-    /^Error: dropMembership EADDRNOTAVAIL$/
-  );
-  socket.close();
-}
+// {
+//   const socket = setup();
+//   assert.throws(
+//     () => { socket.dropMembership(multicastAddress); },
+//     /^Error: dropMembership EADDRNOTAVAIL$/
+//   );
+//   socket.close();
+// }
 
 // dropMembership() after addMembership() should not throw
-{
-  const socket = setup();
-  assert.doesNotThrow(
-    () => {
-      socket.addMembership(multicastAddress);
-      socket.dropMembership(multicastAddress);
-    }
-  );
-  socket.close();
-}
+// {
+//   const socket = setup();
+//   assert.doesNotThrow(
+//     () => {
+//       socket.addMembership(multicastAddress);
+//       socket.dropMembership(multicastAddress);
+//     }
+//   );
+//   socket.close();
+// }
--- a/test/common/index.js
+++ b/test/common/index.js
@@ -276,24 +276,7 @@
 };
 
 exports.platformTimeout = function(ms) {
-  if (process.config.target_defaults.default_configuration === 'Debug')
-    ms = 2 * ms;
-
-  if (exports.isAix)
-    return 2 * ms; // default localhost speed is slower on AIX
-
-  if (process.arch !== 'arm')
-    return ms;
-
-  const armv = process.config.variables.arm_version;
-
-  if (armv === '6')
-    return 7 * ms;  // ARMv6
-
-  if (armv === '7')
-    return 2 * ms;  // ARMv7
-
-  return ms; // ARMv8+
+  return 20 * ms;
 };
 
 let knownGlobals = [
