Description: FHS path for nodejs, rename man page to nodejs.
 Use /usr/lib/nodejs for packaged modules.
 
Forwarded: not-needed
Author: Jérémy Lal <kapouer@melix.org>
Last-Update: 2013-03-16
--- a/doc/node.1
+++ b/doc/node.1
@@ -26,12 +26,13 @@
 
 .SH NAME
 
-node \- Server-side JavaScript runtime
+nodejs \- Server-side JavaScript runtime
+
 
 
 .SH SYNOPSIS
 
-.B node
+.B nodejs
 .RI [ options ]
 .RI [ v8\ options ]
 .RI [ script.js \ |
--- a/test/parallel/test-module-loading-globalpaths.js
+++ b/test/parallel/test-module-loading-globalpaths.js
@@ -70,10 +70,10 @@
 
   // Test module in $PREFIX/lib/node.
   // Write module into $PREFIX/lib/node.
-  const expectedString = '$PREFIX/lib/node';
+  const expectedString = '$PREFIX/lib/nodejs';
   const prefixLibPath = path.join(prefixPath, 'lib');
   fs.mkdirSync(prefixLibPath);
-  const prefixLibNodePath = path.join(prefixLibPath, 'node');
+  const prefixLibNodePath = path.join(prefixLibPath, 'nodejs');
   fs.mkdirSync(prefixLibNodePath);
   const pkgPath = path.join(prefixLibNodePath, `${pkgName}.js`);
   fs.writeFileSync(pkgPath, `exports.string = '${expectedString}';`);
--- a/lib/module.js
+++ b/lib/module.js
@@ -625,7 +625,7 @@
   } else {
     prefixDir = path.resolve(process.execPath, '..', '..');
   }
-  var paths = [path.resolve(prefixDir, 'lib', 'node')];
+  var paths = [path.resolve(prefixDir, 'lib', 'nodejs')];
 
   if (homeDir) {
     paths.unshift(path.resolve(homeDir, '.node_libraries'));
