diff --git a/ap-hotspot b/ap-hotspot
index 52a8d77..3a3ff61 100755
--- a/ap-hotspot
+++ b/ap-hotspot
@@ -4,6 +4,7 @@
 #
 # Copyright (C) 2014  Alin Andrei <andrew@webupd8.org>
 # Copyright (C) 2014  Satyajit sahoo
+# Copyright (C) 2014  Roessler Alexander <contact@roessler.systems>
 # 
 # This scipt is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published
@@ -23,10 +24,30 @@ logfile="/tmp/hostapd.log"
 pidfile="/tmp/hotspot.pid"
 hotspotconfig="/etc/ap-hotspot.conf"
 dnsmasqconfig="/etc/dnsmasq.d/ap-hotspot.rules"
+systemdservice="/lib/systemd/ap-hotspot.service"
+systemdsymlink="/etc/systemd/system/ap-hotspot.service"
 user=$(who | awk '{print $1}' | sed '/^root$/d' | uniq)
 WMPID=$(ps -u $user | tail -n 1 | awk '{print $1}')
 DBUS=$(egrep -z 'DBUS_SESSION_BUS_ADDRESS|DISPLAY' /proc/${WMPID}/environ | sed -r -e 's/(.)DBUS_/\1 DBUS_/' -e 's/(.)DISPLAY/\1 DISPLAY/')
 
+if command -v route > /dev/null; then
+    IFCONFIG_EXISTS="yes"
+else
+    IFCONFIG_EXISTS=
+fi
+
+if command -v service > /dev/null; then
+    UPSTART_EXISTS="yes"
+else
+    UPSTART_EXISTS=
+fi
+
+if command -v systemctl > /dev/null; then
+    SYSTEMD_EXISTS="yes"
+else
+    SYSTEMD_EXISTS=
+fi
+
 show_msg() {
 echo -e "$@"
 }
@@ -97,6 +118,13 @@ while [[ -f "$logfile" ]]; do
 done
 }
 
+check_systemd() {
+if [[ ! $UPSTART_EXISTS ]]; then
+	show_err "Registering AP-Hotspot as service is only supported on systems with Systemd"
+	exit 1
+fi
+}
+
 configure() {
 # Check root
 check_root
@@ -107,8 +135,27 @@ rm -f "$hotspotconfig"
 rm -f "$dnsmasqconfig"
 # Detect configuration
 show_msg "Detecting configuration..."
-INTERFACE_NET=$(route | grep -iw "default" | awk '{print $NF}')
-INTERFACE_WLAN=$(iwconfig 2>&1 | grep "^wlan" | sed -e 's/ .*//g' | tail -n 1)
+
+#Figuring out Default Interent Interface
+if command -v route > /dev/null; then
+    INTERFACE_NET=$(route | grep -iw "default" | awk '{print $NF}')
+elif command -v ip > /dev/null; then
+    INTERFACE_NET=$(ip route | grep -iw "default" | awk '{print $5}')
+fi
+
+#Figuring out Wireless Interface
+if command -v iwconfig > /dev/null; then  #Checking presence of iwconfig
+    INTERFACE_WLAN=$(iwconfig 2>&1 | grep "^wlan" | sed -e 's/ .*//g' | tail -n 1) #Assuming interface uses old wlan convention
+    if [[ ! $INTERFACE_WLAN ]]; then
+        INTERFACE_WLAN=$(iwconfig 2>&1 | grep "^wlp" | sed -e 's/ .*//g' | tail -n 1)  #Assuming interface uses new wlp convention
+    fi
+elif command -v iw > /dev/null; then
+    INTERFACE_WLAN=$(iw dev 2>&1 | grep "wlan" | awk '{print $2'} | tail -n 1)
+    if [[ ! $INTERFACE_WLAN ]]; then
+        INTERFACE_WLAN=$(iwconfig 2>&1 | grep "^wlp" | sed -e 's/ .*//g' | tail -n 1)
+    fi
+fi
+
 SSID="myhotspot"
 WPAPASS="qwerty0987"
 # Network interface connected to the Internet
@@ -134,6 +181,11 @@ read ssid
 # WPA Passphrase
 show_msg "Enter the desired WPA Passphrase below or press ENTER to use the default one ($WPAPASS):"
 read wpapass
+wpapass_size=${#wpapass}
+if ! [ "$wpapass_size" -eq 0 -o "$wpapass_size" -ge 8 -a "$wpapass_size" -le 38 ]; then
+	show_err "WPA password must be between 8 and 38 characters long"
+	exit 1
+fi
 [[ "$wpapass" ]] && WPAPASS="$wpapass"
 # Write the hostapd config file
 cat <<EOF | tee "$hotspotconfig" > /dev/null 2>&1
@@ -161,7 +213,7 @@ cat <<EOF | tee "$dnsmasqconfig" > /dev/null 2>&1
 bind-interfaces
 # Choose interface for binding
 interface=$INTERFACE_WLAN
-# Specify range of IP addresses for DHCP leasses
+# Specify range of IP addresses for DHCP leases
 dhcp-range=192.168.150.2,192.168.150.10,12h
 #INTERFACE_NET=$INTERFACE_NET
 EOF
@@ -195,14 +247,30 @@ check_network
 echo "$$" > "$pidfile"
 show_info "Starting Wireless Hotspot..."
 # Set up the services
-service hostapd stop 2>&1 | show_debug
-service dnsmasq stop 2>&1 | show_debug
-update-rc.d hostapd disable 2>&1 | show_debug
-update-rc.d dnsmasq disable 2>&1 | show_debug
+if [[ $UPSTART_EXISTS ]]; then
+    service hostapd stop 2>&1 | show_debug
+    service dnsmasq stop 2>&1 | show_debug
+    update-rc.d hostapd disable 2>&1 | show_debug
+    update-rc.d dnsmasq disable 2>&1 | show_debug
+else
+    systemctl stop hostapd 2>&1 | show_debug
+    systemctl stop dnsmasq 2>&1 | show_debug
+    systemctl disable hostapd 2>&1 | show_debug
+    systemctl disable dnsmasq 2>&1 | show_debug
+fi
 # Configure IP address for WLAN
-ifconfig "$INTERFACE_WLAN" 192.168.150.1 2>&1 | show_debug
+if [[ $IFCONFIG_EXISTS ]]; then
+    ifconfig "$INTERFACE_WLAN" 192.168.150.1 2>&1 | show_debug
+else #using ip command
+    ip addr flush dev "$INTERFACE_WLAN" 2>&1 | show_debug
+    ip addr add 192.168.150.1 dev "$INTERFACE_WLAN" 2>&1 | show_debug
+fi
 # Start DHCP/DNS server
-service dnsmasq restart 2>&1 | show_debug
+if [[ $UPSTART_EXISTS ]]; then
+    service dnsmasq restart 2>&1 | show_debug
+else
+    systemctl restart dnsmasq 2>&1 | show_debug
+fi
 # Enable routing
 sysctl net.ipv4.ip_forward=1 2>&1 | show_debug
 # Enable NAT
@@ -246,13 +314,21 @@ sysctl net.ipv4.ip_forward=0 2>&1 | show_debug
 # Set up the services
 service hostapd stop 2>&1 | show_debug
 service dnsmasq stop 2>&1 | show_debug
-# Restart WiFi and disable newly created mon.WLAN network
-if [[ ! -z $(ifconfig | grep "mon.$INTERFACE_WLAN") ]]; then
+# Disable WiFi and disable newly created mon.WLAN network
+if [[ $IFCONFIG_EXISTS ]]; then
+    if [[ ! -z $(ifconfig | grep "mon.$INTERFACE_WLAN") ]]; then
+# Check if the hotspot is active
+        ifconfig "mon.$INTERFACE_WLAN" down
+    fi
+    ifconfig "$INTERFACE_WLAN" down
+else #Using ip command
+    if [[ ! -z $(ip addr | grep "mon.$INTERFACE_WLAN") ]]; then
 # Check if the hotspot is active
-	ifconfig "mon.$INTERFACE_WLAN" down
+        ip link set "mon.$INTERFACE_WLAN" down
+    fi
+    ip link set "$INTERFACE_WLAN" down
+    ip link set "$INTERFACE_WLAN" up
 fi
-ifconfig "$INTERFACE_WLAN" down
-ifconfig "$INTERFACE_WLAN" up
 }
 
 restart() {
@@ -261,6 +337,46 @@ stop
 start
 }
 
+enable() {
+# Check root
+check_root
+# Check systemd
+check_systemd
+show_info "Enabling Wireless Hotspot Service"
+# Write systemd service file
+cat <<EOF | tee "$systemdservice" > /dev/null 2>&1
+[Unit]
+Description=Creates a Wifi access point
+After=syslog.target network.target
+[Service]
+Type=oneshot
+RemainAfterExit=yes
+KillMode=none
+ExecStart=/usr/bin/ap-hotspot start
+ExecStop=/usr/bin/ap-hotspot stop
+[Install]
+WantedBy=multi-user.target
+EOF
+# Create symlink
+ln -f "$systemdservice" "$systemdsymlink"
+# Register service
+systemctl daemon-reload
+systemctl enable ap-hotspot.service
+}
+
+disable() {
+# Check root
+check_root
+# Check systemd
+check_systemd
+show_info "Disabling Wireless Hotspot Service"
+# Disable service
+systemctl disable ap-hotspot.service
+# Remove files
+rm "$systemdsymlink"
+rm "$systemdservice"
+}
+
 case "$1" in
 	start)
 			start;;
@@ -268,14 +384,18 @@ case "$1" in
 			stop;;
 	restart)
 			restart;;
+	enable)
+			enable;;
+	disable)
+			disable;;
 	configure)
 			configure;;
 	debug)
 			debug="true"
 			start;;
 	*)
-			args=( "start" "stop" "restart" "configure" "debug" )
-			desc=( "start wireless hotspot" "stop wireless hotspot" "restart wireless hotspot" "configure hotspot" "start with detailed messages" )
+			args=( "start" "stop" "restart" "enable" "disable" "configure" "debug" )
+			desc=( "start wireless hotspot" "stop wireless hotspot" "restart wireless hotspot" "enable wireless hotspot service" "disable wireless hotspot service" "configure hotspot" "start with detailed messages" )
 			echo -e "Usage:\tap-hotspot [argument]\n"
 			for ((i=0; i < ${#args[@]}; i++)); do
 				printf "\t%-15s%-s\n" "${args[i]}" "${desc[i]}"
