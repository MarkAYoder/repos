#!/bin/bash -e

ip_prefix="192.168.8"

if [ ! -f /tmp/wifi.up ] ; then

	unset wlan_0_mac
	board=$(cat /proc/device-tree/model | sed "s/ /_/g")
	case "${board}" in
	TI_AM335x_BeagleBone_Green_Wireless)
		eeprom="/sys/bus/i2c/devices/0-0050/eeprom"
		;;
	*)
		unset eeprom
		;;
	esac

	if [ -f ${eeprom} ] ; then
		wlan_0_mac=$(hexdump -e '8/1 "%c"' ${eeprom} -n 72 | tail -1 | cut -b 5-8 || true)
		if [ ! "x${wlan_0_mac}" = "xA335" ] ; then
			wlan_0_mac=$(hexdump -e '8/1 "%c"' ${eeprom} -n 72 | tail -1 | cut -b 5-16 | sed 's/\(..\)/\1:/g;s/:$//' || true)
		fi
	fi

	#cpsw_0_mac is normally used by eth0, safe to use as this isn't connected on bbgw...
	mac_address="/proc/device-tree/ocp/ethernet@4a100000/slave@4a100200/mac-address"
	if [ -f ${mac_address} ] ; then
		cpsw_0_mac=$(hexdump -v -e '1/1 "%02X" ":"' ${mac_address} | sed 's/.$//')
	else
		#todo: generate random mac... (this is a development tre board in the lab...)
		cpsw_0_mac="1c:ba:8c:a2:ed:68"
	fi

	iw dev SoftAp0 del &> /dev/null || true

	iw phy phy0 interface add SoftAp0 type managed

	p=$?
	if [ $p==0 ];then
		echo "phy0 created "
	else
		echo "Err: can't creat phy0 "
		exit 1
	fi

	ip link set dev SoftAp0 down
	ip link set dev SoftAp0 address ${cpsw_0_mac}
	ip link set dev SoftAp0 up
	ip addr add ${ip_prefix}.1/24 broadcast ${ip_prefix}.255 dev SoftAp0

	#FIXME:http://processors.wiki.ti.com/index.php/WL18xx_Writing_MAC_address#Setting_a_Permanent_MAC_Address_in_the_NVS_File
	#if [ ! "x${wlan_0_mac}" = "x" ] ; then
	#	ip link set dev wlan0 down
	#	ip link set dev wlan0 address ${wlan_0_mac}
	#	ip link set dev wlan0 up
	#	rm -rf /var/lib/connman/wifi_deadbeef0000_*/ || true
	#fi

	echo 1 > /proc/sys/net/ipv4/ip_forward
	iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE
	iptables -A FORWARD -i wlan0 -o SoftAp0 -m state --state RELATED,ESTABLISHED -j ACCEPT
	iptables -A FORWARD -i SoftAp0 -o wlan0 -j ACCEPT

	sleep 1

	touch /tmp/wifi.up
fi

systemctl stop bonescript.socket || true
systemctl disable bonescript.socket || true
systemctl stop bonescript-autorun.service || true
systemctl disable bonescript-autorun.service || true
systemctl start wificonfig.service || true
