--- src/jdk/make/CompileDemos.gmk~	2015-06-30 17:56:05.000000000 +0200
+++ src/jdk/make/CompileDemos.gmk	2015-07-06 17:12:17.947815269 +0200
@@ -235,10 +235,12 @@
   $1_CXXFLAGS := $(CXXFLAGS_JDKLIB) -I$(JDK_TOPDIR)/src/share/demo/jvmti/$1 \
       $$(BUILD_DEMO_JVMTI_$1_EXTRA_INC) $3 \
       $(CXXFLAGS_DEBUG_SYMBOLS)
+  ifeq ($(OPENJDK_TARGET_OS), solaris)
   ifeq ($1-$(OPENJDK_TARGET_CPU_ARCH), waiters-sparc)
     $1_FILTER := -xregs=no%appl
     $1_CXXFLAGS := $$(filter-out $$($1_FILTER), $$($1_CXXFLAGS))
   endif
+  endif
 
   # Workaround for CFLAGS_JDKLIB containing ',' on solaris. If this is added as 'CFLAGS' to the
   # eval call below, the comma gets expanded too early.
--- src/jdk/make/CompileLaunchers.gmk~	2015-07-06 17:03:20.811784288 +0200
+++ src/jdk/make/CompileLaunchers.gmk	2015-07-06 17:12:53.212611824 +0200
@@ -443,10 +443,12 @@
 
 endif
 
+ifeq ($(OPENJDK_TARGET_OS), solaris)
 ifeq ($(OPENJDK_TARGET_CPU_ARCH), sparc)
   UNPACKEXE_CFLAGS += -xregs=no%appl
   UNPACKEXE_LDFLAGS_solaris += -xmemalign=4s
 endif
+endif
 
 UNPACKEXE_LANG := C
 ifeq ($(OPENJDK_TARGET_OS), solaris)
--- src/jdk/make/lib/SecurityLibraries.gmk~	2015-07-06 17:03:20.787783757 +0200
+++ src/jdk/make/lib/SecurityLibraries.gmk	2015-07-06 17:12:39.820309255 +0200
@@ -228,9 +228,11 @@
   # except!!! libsunec.so
   #
   ECC_JNI_SOLSPARC_FILTER :=
+  ifeq ($(OPENJDK_TARGET_OS), solaris)
   ifeq ($(OPENJDK_TARGET_CPU_ARCH), sparc)
     ECC_JNI_SOLSPARC_FILTER := -xregs=no%appl
   endif
+  endif
 
   $(eval $(call SetupNativeCompilation,BUILD_LIBSUNEC, \
       LIBRARY := sunec, \
