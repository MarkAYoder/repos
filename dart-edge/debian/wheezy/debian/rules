#!/usr/bin/make -f
export DH_VERBOSE = 1

# Some variables:
DEB_HOST_ARCH_OS  ?= $(shell dpkg-architecture -qDEB_HOST_ARCH_OS)
DEB_HOST_ARCH_CPU ?= $(shell dpkg-architecture -qDEB_HOST_ARCH_CPU)

ifneq (,$(filter amd64,$(DEB_HOST_ARCH_CPU)))
	build=x64
	release=X64
endif

ifneq (,$(filter arm,$(DEB_HOST_ARCH_CPU)))
	build=arm
	release=ARM
endif

PARALLEL_JOBS := 1

# Verbose?
ifeq (1,$(DH_VERBOSE))
BUILD_ARGS += V=1
endif

%:
	dh $@

override_dh_auto_clean:
	echo $(DEB_BUILD_OPTIONS)
	rm -fr dart/out dart/Makefile
	find . -name *.tmp -execdir rm -f {} \;
	find . -name *.pyc -execdir rm -f {} \;
	find . -name *.mk -execdir rm -f {} \;
	find . -name *.Makefile -execdir rm -f {} \;

override_dh_auto_configure:
	GYP_GENERATORS=make python dart/tools/gyp_dart.py all

override_dh_auto_build:
	cd dart; \
	python tools/build.py -v -m release -a $(build) runtime; \
	cd ..

# Building the Dart SDK will already strip all binaries.
override_dh_strip:

# This override allows us to ignore spurious missing library errors when
# cross-compiling.
override_dh_shlibdeps:
	dh_shlibdeps --dpkg-shlibdeps-params=--ignore-missing-info

override_dh_auto_install:
	mkdir -p debian/tmp/out
	mv dart/out/Release$(release)/dart dart/out/Release$(release)/dart-edge
	cp -vR dart/out/Release$(release)/dart-edge debian/tmp/out
	dh_install
	dh_link
