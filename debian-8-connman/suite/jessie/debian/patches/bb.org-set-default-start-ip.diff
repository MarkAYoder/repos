diff --git a/src/connman.h b/src/connman.h
index 447bdd7..106310d 100644
--- a/src/connman.h
+++ b/src/connman.h
@@ -959,7 +959,8 @@ struct connman_ippool *__connman_ippool_create(int index,
 					unsigned int start,
 					unsigned int range,
 					ippool_collision_cb_t collision_cb,
-					void *user_data);
+					void *user_data,
+					uint32_t offset);
 
 const char *__connman_ippool_get_gateway(struct connman_ippool *pool);
 const char *__connman_ippool_get_broadcast(struct connman_ippool *pool);
diff --git a/src/ippool.c b/src/ippool.c
index cea1dcc..a858df2 100644
--- a/src/ippool.c
+++ b/src/ippool.c
@@ -347,11 +347,13 @@ struct connman_ippool *__connman_ippool_create(int index,
 					unsigned int start,
 					unsigned int range,
 					ippool_collision_cb_t collision_cb,
-					void *user_data)
+					void *user_data,
+					uint32_t offset)
 {
 	struct connman_ippool *pool;
 	struct address_info *info;
 	uint32_t block;
+	uint32_t check;
 
 	DBG("");
 
@@ -364,10 +366,26 @@ struct connman_ippool *__connman_ippool_create(int index,
 		return NULL;
 	}
 
-	block = get_free_block(start + range);
-	if (block == 0) {
-		connman_warn("Could not find a free IP block");
-		return NULL;
+	if (offset)
+	{
+		do {
+			block = get_free_block(start + range);
+
+			if (block == 0) {
+				connman_warn("Could not find a free IP block");
+				return NULL;
+			}
+			check = (block & 0x0000ff00) >> 8;
+
+		} while (check <= offset);
+	}
+	else
+	{
+		block = get_free_block(start + range);
+		if (block == 0) {
+			connman_warn("Could not find a free IP block");
+			return NULL;
+		}
 	}
 
 	pool = g_try_new0(struct connman_ippool, 1);
diff --git a/src/peer.c b/src/peer.c
index 8a380c9..4449dc0 100644
--- a/src/peer.c
+++ b/src/peer.c
@@ -140,7 +140,7 @@ static int start_dhcp_server(struct connman_peer *peer)
 	else
 		index = connman_device_get_index(peer->device);
 
-	peer->ip_pool = __connman_ippool_create(index, 2, 1, NULL, NULL);
+	peer->ip_pool = __connman_ippool_create(index, 2, 1, NULL, NULL, 0);
 	if (!peer->ip_pool)
 		goto error;
 
diff --git a/src/tethering.c b/src/tethering.c
index 3153349..4f2486d 100644
--- a/src/tethering.c
+++ b/src/tethering.c
@@ -207,7 +207,7 @@ void __connman_tethering_set_enabled(void)
 
 	index = connman_inet_ifindex(BRIDGE_NAME);
 	dhcp_ippool = __connman_ippool_create(index, 2, 252,
-						tethering_restart, NULL);
+						tethering_restart, NULL, 0);
 	if (!dhcp_ippool) {
 		connman_error("Fail to create IP pool");
 		__connman_bridge_remove(BRIDGE_NAME);
@@ -485,7 +485,7 @@ int __connman_private_network_request(DBusMessage *msg, const char *owner)
 	pn->fd = fd;
 	pn->interface = iface;
 	pn->index = index;
-	pn->pool = __connman_ippool_create(pn->index, 1, 1, ippool_disconnect, pn);
+	pn->pool = __connman_ippool_create(pn->index, 2, 1, ippool_disconnect, pn, 7);
 	if (!pn->pool) {
 		errno = -ENOMEM;
 		goto error;
diff --git a/unit/test-ippool.c b/unit/test-ippool.c
index 17fac9d..6d07e55 100644
--- a/unit/test-ippool.c
+++ b/unit/test-ippool.c
@@ -46,11 +46,11 @@ static void test_case_1(void)
 
 	__connman_ippool_init();
 
-	pool = __connman_ippool_create(23, 1, 500, NULL, NULL);
+	pool = __connman_ippool_create(23, 1, 500, NULL, NULL, 0);
 	g_assert(!pool);
 
 	for (i = 0; i < 100000; i++) {
-		pool = __connman_ippool_create(23, 1, 20, NULL, NULL);
+		pool = __connman_ippool_create(23, 1, 20, NULL, NULL, 0);
 		g_assert(pool);
 
 		__connman_ippool_unref(pool);
@@ -73,7 +73,7 @@ static void test_case_2(void)
 
 	/* Test the IP range */
 	for (i = 1; i < 254; i++) {
-		pool = __connman_ippool_create(23, 1, i, NULL, NULL);
+		pool = __connman_ippool_create(23, 1, i, NULL, NULL, 0);
 		g_assert(pool);
 
 		gateway = __connman_ippool_get_gateway(pool);
@@ -130,7 +130,7 @@ static void test_case_3(void)
 	__connman_ippool_newaddr(46, "172.16.0.1", 11);
 
 	while (TRUE) {
-		pool = __connman_ippool_create(23, 1, 100, NULL, NULL);
+		pool = __connman_ippool_create(23, 1, 100, NULL, NULL, 0);
 		if (!pool)
 			break;
 		i += 1;
@@ -192,7 +192,7 @@ static void test_case_4(void)
 	/* Test the IP range collision */
 
 	flag = 0;
-	pool = __connman_ippool_create(23, 1, 100, collision_cb, &flag);
+	pool = __connman_ippool_create(23, 1, 100, collision_cb, &flag, 0);
 	g_assert(pool);
 
 	gateway = __connman_ippool_get_gateway(pool);
@@ -223,7 +223,7 @@ static void test_case_4(void)
 
 	flag = 0;
 
-	pool = __connman_ippool_create(23, 1, 100, collision_cb, &flag);
+	pool = __connman_ippool_create(23, 1, 100, collision_cb, &flag, 0);
 	g_assert(pool);
 
 	gateway = __connman_ippool_get_gateway(pool);
@@ -271,7 +271,7 @@ static void test_case_5(void)
 	g_assert(flag == 0);
 
 	/* pool should return 192.168.0.1 now */
-	pool1 = __connman_ippool_create(26, 1, 100, collision_cb, &flag);
+	pool1 = __connman_ippool_create(26, 1, 100, collision_cb, &flag, 0);
 	g_assert(pool1);
 
 	gateway = __connman_ippool_get_gateway(pool1);
@@ -303,7 +303,7 @@ static void test_case_5(void)
 
 	/* pool should return 192.168.2.1 now */
 	flag = 0;
-	pool2 = __connman_ippool_create(23, 1, 100, collision_cb, &flag);
+	pool2 = __connman_ippool_create(23, 1, 100, collision_cb, &flag, 0);
 	g_assert(pool2);
 
 	gateway = __connman_ippool_get_gateway(pool2);
@@ -361,7 +361,7 @@ static void test_case_6(void)
 	g_assert(flag == 0);
 
 	/* pool should return 192.168.2.1 now */
-	pool1 = __connman_ippool_create(26, 1, 100, collision_cb, &flag);
+	pool1 = __connman_ippool_create(26, 1, 100, collision_cb, &flag, 0);
 	g_assert(pool1);
 
 	gateway = __connman_ippool_get_gateway(pool1);
@@ -393,7 +393,7 @@ static void test_case_6(void)
 
 	/* pool should return 192.168.3.1 now */
 	flag = 0;
-	pool2 = __connman_ippool_create(23, 1, 100, collision_cb, &flag);
+	pool2 = __connman_ippool_create(23, 1, 100, collision_cb, &flag, 0);
 	g_assert(pool2);
 
 	gateway = __connman_ippool_get_gateway(pool2);
