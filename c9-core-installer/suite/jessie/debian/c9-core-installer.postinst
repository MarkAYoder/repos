#!/bin/sh
#
# see: dh_installdeb(1)

set -e

package="c9-core-installer"

sha256sum_tgz="ada7e30646fde01b965526e7171fa266411782f83f773f6425d066fc438264a5"
wfile="c9-core_3.0.1+git20150709-build.tar.xz"

partner_url="https://rcn-ee.com/repos/pkgs/c9v3"
extract_dir="/opt/cloud9/build/"

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

dl_file() {
	wget ${partner_url}/${wfile}
}

validdate_file() {
	sha256compare=$(sha256sum ${wfile} | awk '{print $1}')
	if [ ! "x${sha256compare}" = "x${sha256sum_tgz}" ] ; then
		rm -rf ${wfile}
		dl_file
		sha256compare=$(sha256sum ${wfile} | awk '{print $1}')
		if [ ! "x${sha256compare}" = "x${sha256sum_tgz}" ] ; then
			echo "dl failure"
			exit 1
		fi
	fi
}

dl_install() {
	if [ ! -d /var/cache/${package} ] ; then
		mkdir -p /var/cache/${package}
	fi

	cd /var/cache/${package}/

	if [ ! -f ${wfile} ] ; then
		dl_file
	fi

	if [ -f ${wfile} ] ; then
		validdate_file

		systemctl stop cloud9.socket || true

		if [ ! -d ${extract_dir} ] ; then
			mkdir -p ${extract_dir} || true
		fi

		echo "extracting: ${wfile}"
		tar xf ${wfile} -C ${extract_dir}
		chown -R 1000:1000 ${extract_dir}

		if [ ! -d /var/lib/cloud9 ] ; then
			mkdir -p /var/lib/cloud9 || true
		fi

		systemctl --system daemon-reload || true
	fi
}

maybe_install_depend () {
	if [ ! -f "$C9_DIR/node_modules/${pkg}/${package}.version" ] ; then
		echo "${package}:Installing: ${pkg}-${ver}.tgz (for ${npm_project})"
		"$NPM" install /var/cache/${package}/${pkg}-${ver}.tgz
		echo "${ver}" > "$C9_DIR/node_modules/${pkg}/${package}.version"
	else
		old_version=$(cat "$C9_DIR/node_modules/${pkg}/${package}.version")
		if [ ! "x${old_version}" = "x${ver}" ] ; then
			echo "${package}:Installing: ${pkg}-${ver}.tgz (for ${npm_project})"
			"$NPM" install /var/cache/${package}/${pkg}-${ver}.tgz
			echo "${ver}" > "$C9_DIR/node_modules/${pkg}/${package}.version"
		fi
	fi
}

c9_directory () {
	#FIXME: use npm install shrinkwrap
	#Based on: https://github.com/c9/install
	C9_DIR=/root/.c9
	NPM=$C9_DIR/node/bin/npm
	NODE=$C9_DIR/node/bin/node
	PYTHON=python

	VIRTUALENV_VERSION=virtualenv-12.0.7

	mkdir -p "$C9_DIR"/bin
	mkdir -p "$C9_DIR"/tmp
	mkdir -p "$C9_DIR"/node_modules
	cd "$C9_DIR"

	#start install node tmux_install nak ptyjs vfsextend collab

	#node:
	mkdir -p "$C9_DIR"/node/bin
	ln -sf $(which nodejs) "$C9_DIR"/node/bin/node
	ln -sf $(which npm) "$C9_DIR"/node/bin/

	# use local npm cache
	"$NPM" config -g set cache  "$C9_DIR/tmp/.npm"
	# node-gyp uses sytem node or fails with command not found if
	# we don't bump this node up in the path
	PATH="$C9_DIR/node/bin/:$C9_DIR/node_modules/.bin:$PATH"

	if [ -d "$C9_DIR"/$VIRTUALENV_VERSION ] ; then
		rm -rf "$C9_DIR"/$VIRTUALENV_VERSION
	fi
	tar xzf /var/cache/c9-core-installer/$VIRTUALENV_VERSION.tar.gz

	if [ -d "$C9_DIR"/virtualenv ] ; then
		rm -rf "$C9_DIR"/virtualenv
	fi
	mv $VIRTUALENV_VERSION virtualenv

	echo ${package}:python
	"$PYTHON" virtualenv/virtualenv.py "$C9_DIR/python"

	PYTHON="$C9_DIR/python/bin/python"

	"$NPM" config -g set python "$PYTHON"

	#tmux_install
	ln -sf $(which tmux) "$C9_DIR"/bin/tmux

	npm_project="nak"

	#nak@0.3.3 node_modules/nak
	#├── simplefunc@0.0.2
	#├── colors@0.6.2
	#└── isbinaryfile@2.0.0

	#npm pack simplefunc@0.0.2
	pkg="simplefunc" ; ver="0.0.2" ; maybe_install_depend

	#npm pack colors@0.6.2
	pkg="colors" ; ver="0.6.2" ; maybe_install_depend

	#npm pack isbinaryfile@2.0.0
	pkg="isbinaryfile" ; ver="2.0.0" ; maybe_install_depend

	echo "${package}:Installing nak"
	#npm pack https://github.com/c9/nak/tarball/c9
	"$NPM" install /var/cache/${package}/nak-0.3.3.tgz

	#ptyjs
	#"$NPM" install node-gyp
	#├── rimraf@2.4.1
	#├── graceful-fs@3.0.8
	#├── semver@4.3.6
	#├── nopt@3.0.3 (abbrev@1.0.7)
	#├── fstream@1.0.7 (inherits@2.0.1)
	#├── which@1.1.1 (is-absolute@0.1.7)
	#├── osenv@0.1.3 (os-homedir@1.0.0, os-tmpdir@1.0.1)
	#├── tar@1.0.3 (inherits@2.0.1, block-stream@0.0.8)
	#├── minimatch@1.0.0 (sigmund@1.0.1, lru-cache@2.6.5)
	#├── mkdirp@0.5.1 (minimist@0.0.8)
	#├── glob@4.5.3 (inherits@2.0.1, once@1.3.2, inflight@1.0.4, minimatch@2.0.8)
	#├── path-array@1.0.0 (array-index@0.1.1)
	#├── npmlog@1.2.1 (ansi@0.3.0, are-we-there-yet@1.0.4, gauge@1.2.2)
	#└── request@2.58.0 (caseless@0.10.0, aws-sign2@0.5.0, forever-agent@0.6.1, stringstream@0.0.4, tunnel-agent@0.4.1, oauth-sign@0.8.0, isstream@0.1.2, extend@2.0.1, json-stringify-safe@5.0.1, node-uuid@1.4.3, qs@3.1.0, bl@0.9.4, tough-cookie@2.0.0, combined-stream@1.0.5, mime-types@2.0.14, form-data@1.0.0-rc1, http-signature@0.11.0, hawk@2.3.1, har-validator@1.8.0)

	npm_project="node-gyp"

	#├── rimraf@2.4.1

	npm_project="rimraf@2.4.1"

	#npm install rimraf@2.4.1
	#rimraf@2.4.1 node_modules/rimraf
	#└── glob@4.5.3 (inherits@2.0.1, once@1.3.2, inflight@1.0.4, minimatch@2.0.8)
	
	#npm install glob@4.5.3
	#glob@4.5.3 node_modules/glob
	#├── inherits@2.0.1
	#├── once@1.3.2 (wrappy@1.0.1)
	#├── inflight@1.0.4 (wrappy@1.0.1)
	#└── minimatch@2.0.8 (brace-expansion@1.1.0)

	#npm install once@1.3.2
	#once@1.3.2 node_modules/once
	#└── wrappy@1.0.1

	#npm install inflight@1.0.4
	#inflight@1.0.4 node_modules/inflight
	#├── once@1.3.2
	#└── wrappy@1.0.1

	#npm install minimatch@2.0.8
	#minimatch@2.0.8 node_modules/minimatch
	#└── brace-expansion@1.1.0 (concat-map@0.0.1, balanced-match@0.2.0)

	#npm install brace-expansion@1.1.0
	#brace-expansion@1.1.0 node_modules/brace-expansion
	#├── concat-map@0.0.1
	#└── balanced-match@0.2.0

	#rimraf: 1
	#npm pack balanced-match@0.2.0
	pkg="balanced-match" ; ver="0.2.0" ; maybe_install_depend
	#npm pack concat-map@0.0.1
	pkg="concat-map" ; ver="0.0.1" ; maybe_install_depend
	#npm pack wrappy@1.0.1
	pkg="wrappy" ; ver="1.0.1" ; maybe_install_depend

	#rimraf: 2
	#npm pack brace-expansion@1.1.0
	pkg="brace-expansion" ; ver="1.1.0" ; maybe_install_depend
	#npm pack once@1.3.2
	pkg="once" ; ver="1.3.2" ; maybe_install_depend

	#rimraf: 3
	#npm pack inherits@2.0.1
	pkg="inherits" ; ver="2.0.1" ; maybe_install_depend
	#npm pack inflight@1.0.4
	pkg="inflight" ; ver="1.0.4" ; maybe_install_depend
	#npm pack minimatch@2.0.8
	pkg="minimatch" ; ver="2.0.8" ; maybe_install_depend

	#rimraf: 4
	#npm pack glob@4.5.3
	pkg="glob" ; ver="4.5.3" ; maybe_install_depend

	npm_project="node-gyp"

	#rimraf: 5
	#npm pack rimraf@2.4.1
	pkg="rimraf" ; ver="2.4.1" ; maybe_install_depend

	#next:
	#├── graceful-fs@3.0.8
	#npm pack graceful-fs@3.0.8
	pkg="graceful-fs" ; ver="3.0.8" ; maybe_install_depend

	#├── osenv@0.1.3 (os-tmpdir@1.0.1, os-homedir@1.0.0)
	#npm pack os-homedir@1.0.0
	pkg="os-homedir" ; ver="1.0.0" ; maybe_install_depend
	#npm pack os-tmpdir@1.0.1
	pkg="os-tmpdir" ; ver="1.0.1" ; maybe_install_depend
	#npm pack osenv@0.1.3
	pkg="osenv" ; ver="0.1.3" ; maybe_install_depend

	#├── nopt@3.0.3 (abbrev@1.0.7)
	#npm pack abbrev@1.0.7
	pkg="abbrev" ; ver="1.0.7" ; maybe_install_depend

	#npm pack nopt@3.0.3
	depend="nopt" ; ver="3.0.3" ; maybe_install_depend

	#├── which@1.1.1 (is-absolute@0.1.7)
	#npm pack is-absolute@0.1.7
	pkg="is-absolute" ; ver="0.1.7" ; maybe_install_depend

	#npm pack which@1.1.1
	pkg="which" ; ver="1.1.1" ; maybe_install_depend

	#├── fstream@1.0.7 (inherits@2.0.1)

	#npm pack fstream@1.0.7
	pkg="fstream" ; ver="1.0.7" ; maybe_install_depend

	#├── semver@4.3.6
	#npm pack semver@4.3.6
	pkg="semver" ; ver="4.3.6" ; maybe_install_depend

	#├── minimatch@1.0.0 (sigmund@1.0.1, lru-cache@2.6.5)
	#├── mkdirp@0.5.1 (minimist@0.0.8)
	#├── path-array@1.0.0 (array-index@0.1.1)
	#├── tar@1.0.3 (inherits@2.0.1, block-stream@0.0.8)
	#├── glob@4.5.3 (inherits@2.0.1, once@1.3.2, inflight@1.0.4, minimatch@2.0.8)
	#├── npmlog@1.2.1 (ansi@0.3.0, are-we-there-yet@1.0.4, gauge@1.2.2)
	#└── request@2.58.0 (caseless@0.10.0, aws-sign2@0.5.0, forever-agent@0.6.1, stringstream@0.0.4, tunnel-agent@0.4.1, oauth-sign@0.8.0, isstream@0.1.2, extend@2.0.1, json-stringify-safe@5.0.1, node-uuid@1.4.3, combined-stream@1.0.5, qs@3.1.0, mime-types@2.0.14, http-signature@0.11.0, bl@0.9.4, form-data@1.0.0-rc1, tough-cookie@2.0.0, hawk@2.3.1, har-validator@1.8.0)



#	echo :Installing pty.js
#	"$NPM" install node-gyp
#	"$NPM" install pty.js@0.2.7-1

#	HASPTY=`"$C9_DIR/node/bin/node" -e "console.log(require('pty.js'))" | grep createTerminal | wc -l`
#	if [ $HASPTY -ne 1 ]; then
#	  echo "Unknown exception installing pty.js"
#	  echo `"$C9_DIR/node/bin/node" -e "console.log(require('pty.js'))"`
#	  exit 100
#	fi

# vfsextend collab

	#Cleanup:
	"$NPM" config -g delete cache
	"$NPM" config -g delete tmp
	"$NPM" config -g delete python
}

case "$1" in
    configure)
	dl_install
	c9_directory
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

