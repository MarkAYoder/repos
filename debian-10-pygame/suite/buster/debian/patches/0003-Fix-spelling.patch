From 408ff3a5085199759ceb071c166f84a546a64e32 Mon Sep 17 00:00:00 2001
From: Dominik George <nik@naturalnet.de>
Date: Thu, 26 Jan 2017 17:27:28 +0100
Subject: Fix spelling.

---
 WHATSNEW                               | 16 ++++++++--------
 docs/reST/ref/cdrom.rst                |  2 +-
 docs/reST/ref/font.rst                 |  4 ++--
 docs/reST/ref/freetype.rst             |  4 ++--
 docs/reST/ref/mixer.rst                |  2 +-
 docs/reST/ref/mouse.rst                |  4 ++--
 docs/reST/ref/pixelarray.rst           |  6 +++---
 docs/reST/ref/pygame.rst               |  2 +-
 docs/reST/ref/sprite.rst               |  6 +++---
 docs/reST/ref/time.rst                 |  2 +-
 docs/reST/themes/classic/elements.html |  2 +-
 docs/reST/tut/MoveIt.rst               |  4 ++--
 docs/reST/tut/SpriteIntro.rst          |  2 +-
 examples/mask.py                       |  4 ++--
 examples/sound_array_demos.py          |  2 +-
 examples/testsprite.py                 |  2 +-
 lib/freetype.py                        |  2 +-
 lib/ftfont.py                          |  4 ++--
 lib/sprite.py                          |  8 ++++----
 lib/sysfont.py                         |  2 +-
 setup.py                               |  2 +-
 src/SDL_gfx/SDL_gfxPrimitives.c        |  4 ++--
 src/_pygame.h                          |  2 +-
 src/camera.h                           |  4 ++--
 src/camera_mac.m                       |  6 +++---
 src/color.c                            |  4 ++--
 src/doc/cdrom_doc.h                    |  4 ++--
 src/doc/font_doc.h                     |  4 ++--
 src/doc/freetype_doc.h                 |  4 ++--
 src/doc/sprite_doc.h                   |  4 ++--
 src/font.c                             |  2 +-
 src/imageext.c                         |  2 +-
 src/math.c                             |  4 ++--
 src/mixer.c                            |  2 +-
 src/pgcompat.h                         |  2 +-
 src/pixelarray_methods.c               |  2 +-
 src/pixelcopy.c                        |  2 +-
 src/rotozoom.c                         |  8 ++++----
 src/scale_mmx32.c                      |  4 ++--
 src/scale_mmx64.c                      |  4 ++--
 src/scale_mmx64_gcc.c                  |  4 ++--
 src/scale_mmx64_msvc.c                 |  4 ++--
 src/scrap.c                            |  2 +-
 src/scrap_x11.c                        |  2 +-
 src/surface.c                          |  2 +-
 test/base_test.py                      |  2 +-
 test/cdrom_test.py                     |  2 +-
 test/font_test.py                      |  2 +-
 test/freetype_test.py                  |  2 +-
 test/math_test.py                      |  8 ++++----
 test/mixer_test.py                     |  2 +-
 test/mouse_test.py                     |  4 ++--
 test/surface_test.py                   |  2 +-
 test/test_utils/png.py                 |  8 ++++----
 test/time_test.py                      |  2 +-
 55 files changed, 99 insertions(+), 99 deletions(-)

diff --git a/WHATSNEW b/WHATSNEW
index 4f430af..5772227 100644
--- a/WHATSNEW
+++ b/WHATSNEW
@@ -263,7 +263,7 @@
     Fix bug where PyBuffer_Release is called after a Python error is raised
 
 [HG 3392:b7609599015d] Dec 28, 2014
-    Include gcc libaries in the Pygame Windows install
+    Include gcc libraries in the Pygame Windows install
 
 [HG 3390:9260d857774e] Dec 27, 2014
     Color masks in jpeg save code on big endian fixed. Applies to issue #221;
@@ -704,7 +704,7 @@
 
 [SVN 2848] August 8, 2010
     allow RWopsFromPython to accept a Python 3.x bytes object as a file path
-    (for compatibilty with open())
+    (for compatibility with open())
 
 [SVN 2847] August 8, 2010
     [BUG] Font loading from file object patch, and test.  Thanks Janosch Graf
@@ -1014,7 +1014,7 @@
 
 [SVN 2055-2057] May 04, 2009
     More code fixes to transform.c for non-MMX machines.
-    Clean up METH_NOARG functions which were accidently given a second C
+    Clean up METH_NOARG functions which were accidentally given a second C
       argument in display.c.
     Make scrap test in base_test.py conditional on the presence of scrap.
 
@@ -1167,7 +1167,7 @@
       arguments. Added as per Bugzilla issue 6.
     [BUG] Documentation states that mixer buffer sizes must be a power of 2.
       New default buffer size is 4096. This was the implicit size anyway as
-      buffer size values were rounded up the the nearest power of 2.
+      buffer size values were rounded up the nearest power of 2.
 
 [SVN 1888-1889] Jan 29, 2009
     sound_array_demos.py now uses either NumPy or Numeric.
@@ -1234,7 +1234,7 @@
     Removed PyObjC dependency on OSX.
 
 [SVN 1845-1848] Jan 19, 2009
-    Make the main function consistent accross examples, taking arguments
+    Make the main function consistent across examples, taking arguments
       where the programs except command line arguments.
     Add examples module document page.
     Minor change to usage message in test_runner.py.
@@ -1330,7 +1330,7 @@
 [SVN 1755-1758] Dec 19, 2008
     Added in an extra debugging line... for testing with py2app.
     Fixed error for msvc compiler.
-    Moved brackets closer... suspecting possible dodgey introspection in
+    Moved brackets closer... suspecting possible dodgy introspection in
       py2app.
     Missed freeing surface on malloc out of memory error for saving jpegs.
 
@@ -2046,7 +2046,7 @@ February 1, 2002
     set_icon overrides default icon
 
 January 31, 2002
-    removed emberrasing debug printing
+    removed embarrassing debug printing
     draw.rect does inside edge for bottomright
 
 pygame-14
@@ -2176,7 +2176,7 @@ Aug 29, 2001
     changed initializations, to allow easier embedding
 
 Aug 28, 2001
-    added circle and rect convenciences to pygame.draw
+    added circle and rect conveniences(?) to pygame.draw
     removed debug printing from draw.polygon
 
 Aug 25, 2001
diff --git a/docs/reST/ref/cdrom.rst b/docs/reST/ref/cdrom.rst
index 432d699..8be2a18 100644
--- a/docs/reST/ref/cdrom.rst
+++ b/docs/reST/ref/cdrom.rst
@@ -265,7 +265,7 @@ drive and must also be initialized individually before it can do most things.
    .. method:: get_all
 
       | :sl:`get all track information`
-      | :sg:`get_all() -> [(audio, start, end, lenth), ...]`
+      | :sg:`get_all() -> [(audio, start, end, length), ...]`
 
       Return a list with information for every track on the cdrom. The
       information consists of a tuple with four values. The audio value is True
diff --git a/docs/reST/ref/font.rst b/docs/reST/ref/font.rst
index 98c677e..0da6264 100644
--- a/docs/reST/ref/font.rst
+++ b/docs/reST/ref/font.rst
@@ -24,7 +24,7 @@ Pygame comes with a builtin default font. This can always be accessed by
 passing None as the font name.
 
 To use the :mod:`pygame.freetype` based ``pygame.ftfont`` as
-:mod:`pygame.font` define the enviroment variable PYGAME_FREETYPE before the
+:mod:`pygame.font` define the environment variable PYGAME_FREETYPE before the
 first import of :mod:`pygame`. Module ``pygame.ftfont`` is a :mod:`pygame.font`
 compatible module that passes all but one of the font module unit tests:
 it does not have the UCS-2 limitation of the SDL_ttf based font module, so
@@ -257,7 +257,7 @@ loaded instead.
 
    .. method:: metrics
 
-      | :sl:`Gets the metrics for each character in the pased string.`
+      | :sl:`Gets the metrics for each character in the passed string.`
       | :sg:`metrics(text) -> list`
 
       The list contains tuples for each character, which contain the minimum
diff --git a/docs/reST/ref/freetype.rst b/docs/reST/ref/freetype.rst
index cbe1087..94bbf6a 100644
--- a/docs/reST/ref/freetype.rst
+++ b/docs/reST/ref/freetype.rst
@@ -113,10 +113,10 @@ The ``freetype`` module is new in Pygame 1.9.2
 
 .. function:: was_init
 
-   | :sl:`Return whether the the FreeType library is initialized.`
+   | :sl:`Return whether the FreeType library is initialized.`
    | :sg:`was_init() -> bool`
 
-   Returns whether the the FreeType library is initialized.
+   Returns whether the FreeType library is initialized.
 
 .. function:: get_cache_size
 
diff --git a/docs/reST/ref/mixer.rst b/docs/reST/ref/mixer.rst
index daaa1c3..16a6d32 100644
--- a/docs/reST/ref/mixer.rst
+++ b/docs/reST/ref/mixer.rst
@@ -469,7 +469,7 @@ change the default buffer by calling :func:`pygame.mixer.pre_init` before
       | :sl:`check if the channel is active`
       | :sg:`get_busy() -> bool`
 
-      Returns true if the channel is activily mixing sound. If the channel is
+      Returns true if the channel is activity mixing sound. If the channel is
       idle this returns False.
 
       .. ## Channel.get_busy ##
diff --git a/docs/reST/ref/mouse.rst b/docs/reST/ref/mouse.rst
index 1761a49..68864ff 100644
--- a/docs/reST/ref/mouse.rst
+++ b/docs/reST/ref/mouse.rst
@@ -62,7 +62,7 @@ configured.
    | :sg:`get_pos() -> (x, y)`
 
    Returns the ``X`` and ``Y`` position of the mouse cursor. The position is
-   relative the the top-left corner of the display. The cursor position can be
+   relative the top-left corner of the display. The cursor position can be
    located outside of the display window, but is always constrained to the
    screen.
 
@@ -128,7 +128,7 @@ configured.
    bitmap using the given bitmask arrays. The size is a sequence containing the
    cursor width and height. Hotspot is a sequence containing the cursor hotspot
    position. xormasks is a sequence of bytes containing the cursor xor data
-   masks. Lastly is andmasks, a sequence of bytes containting the cursor
+   masks. Lastly is andmasks, a sequence of bytes containing the cursor
    bitmask data.
 
    Width must be a multiple of 8, and the mask arrays must be the correct size
diff --git a/docs/reST/ref/pixelarray.rst b/docs/reST/ref/pixelarray.rst
index 6e3ba5d..a9c45bc 100644
--- a/docs/reST/ref/pixelarray.rst
+++ b/docs/reST/ref/pixelarray.rst
@@ -203,7 +203,7 @@
       Replaces the pixels with the passed color in the PixelArray by changing
       them them to the passed replacement color.
 
-      It uses a simple weighted euclidian distance formula to calculate the
+      It uses a simple weighted Euclidean distance formula to calculate the
       distance between the colors. The distance space ranges from 0.0 to 1.0
       and is used as threshold for the color detection. This causes the
       replacement to take pixels with a similar, but not exactly identical
@@ -225,7 +225,7 @@
       non-matching pixels are changed to black. This returns a new PixelArray
       with the black/white color mask.
 
-      It uses a simple weighted euclidian distance formula to calculate the
+      It uses a simple weighted Euclidean distance formula to calculate the
       distance between the colors. The distance space ranges from 0.0 to 1.0
       and is used as threshold for the color detection. This causes the
       extraction to take pixels with a similar, but not exactly identical
@@ -245,7 +245,7 @@
       that indicates the differences (white) of both arrays. Both PixelArray
       objects must have indentical bit depths and dimensions.
 
-      It uses a simple weighted euclidian distance formula to calculate the
+      It uses a simple weighted Euclidean distance formula to calculate the
       distance between the colors. The distance space ranges from 0.0 to 1.0
       and is used as threshold for the color detection. This causes the
       comparision to mark pixels with a similar, but not exactly identical
diff --git a/docs/reST/ref/pygame.rst b/docs/reST/ref/pygame.rst
index 2664dd3..59a0a67 100644
--- a/docs/reST/ref/pygame.rst
+++ b/docs/reST/ref/pygame.rst
@@ -33,7 +33,7 @@ object instead of the module, which can be used to test for availability.
    ``init()`` functions for individual modules will raise exceptions when they
    fail.
 
-   You may want to initalise the different modules seperately to speed up your
+   You may want to initialise the different modules separately to speed up your
    program or to not use things your game does not.
 
    It is safe to call this ``init()`` more than once: repeated calls will have
diff --git a/docs/reST/ref/sprite.rst b/docs/reST/ref/sprite.rst
index 04dc004..c3849f3 100644
--- a/docs/reST/ref/sprite.rst
+++ b/docs/reST/ref/sprite.rst
@@ -575,7 +575,7 @@ Sprites are not thread safe. So lock them yourself if using threads.
 
        _use_update: True/False   default is False
        _default_layer: default layer where sprites without a layer are added.
-       _time_threshold: treshold time for switching between dirty rect mode
+       _time_threshold: threshold time for switching between dirty rect mode
            and fullscreen mode, defaults to 1000./80  == 1000./fps
 
    New in pygame 1.8.0
@@ -631,7 +631,7 @@ Sprites are not thread safe. So lock them yourself if using threads.
 
    .. method:: set_timing_treshold
 
-      | :sl:`sets the treshold in milliseconds`
+      | :sl:`sets the threshold in milliseconds`
       | :sg:`set_timing_treshold(time_ms) -> None`
 
       Default is 1000./80 where 80 is the fps I want to switch to full screen
@@ -779,7 +779,7 @@ Sprites are not thread safe. So lock them yourself if using threads.
    Returns first point on the mask where the masks collided, or None if 
    there was no collision.
 
-   Tests for collision between two sprites, by testing if thier bitmasks
+   Tests for collision between two sprites, by testing if their bitmasks
    overlap. If the sprites have a "mask" attribute, that is used as the mask,
    otherwise a mask is created from the sprite image. Intended to be passed as
    a collided callback function to the \*collide functions. Sprites must have a
diff --git a/docs/reST/ref/time.rst b/docs/reST/ref/time.rst
index 5397865..aff0340 100644
--- a/docs/reST/ref/time.rst
+++ b/docs/reST/ref/time.rst
@@ -17,7 +17,7 @@ resolution, in milliseconds, is given in the ``TIMER_RESOLUTION`` constant.
    | :sl:`get the time in milliseconds`
    | :sg:`get_ticks() -> milliseconds`
 
-   Return the number of millisconds since ``pygame.init()`` was called. Before
+   Return the number of milliseconds since ``pygame.init()`` was called. Before
    pygame is initialized this will always be 0.
 
    .. ## pygame.time.get_ticks ##
diff --git a/docs/reST/themes/classic/elements.html b/docs/reST/themes/classic/elements.html
index b1e2654..1d88949 100644
--- a/docs/reST/themes/classic/elements.html
+++ b/docs/reST/themes/classic/elements.html
@@ -1,7 +1,7 @@
 {%- extends "!layout.html" %}
 
 {%- if not theme_relbar %}
-{%-   block relbar1 %}{# Do not want bar accross the top #}{% endblock %}
+{%-   block relbar1 %}{# Do not want bar across the top #}{% endblock %}
 {%- endif %}
 
 {#- Classic header with Snakey on the left, page links on the right.
diff --git a/docs/reST/tut/MoveIt.rst b/docs/reST/tut/MoveIt.rst
index d6fc60d..97158a8 100644
--- a/docs/reST/tut/MoveIt.rst
+++ b/docs/reST/tut/MoveIt.rst
@@ -200,7 +200,7 @@ but they are talking about the same thing. It is basically copying
 memory from one place to another. Actually, it is a bit more advanced than
 straight copying of memory, since it needs to handle things like pixel
 formats, clipping, and scanline pitches. Advanced blitters can also
-handle things like transparancy and other special effects.
+handle things like transparency and other special effects.
 
 
 Going From The List To The Screen
@@ -310,7 +310,7 @@ the screen. Based on what we already now know, this should look pretty simple. :
 There you have it. This is all the code that is needed to smoothly animate
 an object across the screen. We can even use a pretty background character.
 Another benefit of doing the background this way, the image for the player
-can have transparancy or cutout sections and it will still draw correctly
+can have transparency or cutout sections and it will still draw correctly
 over the background (a free bonus).
 
 We also throw in a call to pygame.time.delay() at the end of our loop above.
diff --git a/docs/reST/tut/SpriteIntro.rst b/docs/reST/tut/SpriteIntro.rst
index b21a52c..f8b1776 100644
--- a/docs/reST/tut/SpriteIntro.rst
+++ b/docs/reST/tut/SpriteIntro.rst
@@ -36,7 +36,7 @@ tutorial, which may help get more an understanding of programming with python
 and pygame.
 
 Note that this introduction will assume you have a bit of experience
-programming with python, and are somewhat framiliar with the different parts of
+programming with python, and are somewhat familiar with the different parts of
 creating a simple game.  In this tutorial the word "reference" is occasionally
 used.  This represents a python variable. Variables in python are references,
 so you can have several variables all pointing to the same object.
diff --git a/examples/mask.py b/examples/mask.py
index 209c35d..439adf3 100644
--- a/examples/mask.py
+++ b/examples/mask.py
@@ -1,5 +1,5 @@
 #!/usr/bin/env python
-"""A pgyame.mask collition detection example
+"""A pgyame.mask collision detection example
 
 exports main()
 
@@ -93,7 +93,7 @@ class Sprite:
 
 
 def main(*args):
-    """Display multiple images bounce off each other using collition detection
+    """Display multiple images bounce off each other using collision detection
 
     Positional arguments:
       one or more image file names.
diff --git a/examples/sound_array_demos.py b/examples/sound_array_demos.py
index 142ed7b..8b758df 100644
--- a/examples/sound_array_demos.py
+++ b/examples/sound_array_demos.py
@@ -144,7 +144,7 @@ def sound_from_pos(sound, start_pos, samples_per_second = None, inplace = 1):
     # figure out the start position in terms of samples.
     start_pos_in_samples = int(start_pos * samples_per_second)
 
-    # cut the begining off the sound at the start position.
+    # cut the beginning off the sound at the start position.
     a2 = a1[start_pos_in_samples:]
 
     # make the Sound instance from the array.
diff --git a/examples/testsprite.py b/examples/testsprite.py
index 123c0c1..47b50e6 100644
--- a/examples/testsprite.py
+++ b/examples/testsprite.py
@@ -148,7 +148,7 @@ def main(update_rects = True,
     use_FastRenderGroup - Use the FastRenderGroup sprite group (default False)
     screen_dims - Pygame window dimensions (default [640, 480])
     use_alpha - use alpha blending (default False)
-    flags - additional display mode flags (default no addiontal flags)
+    flags - additional display mode flags (default no additional flags)
 
     """
 
diff --git a/lib/freetype.py b/lib/freetype.py
index b635d65..e46c6df 100644
--- a/lib/freetype.py
+++ b/lib/freetype.py
@@ -31,7 +31,7 @@ def SysFont(name, size, bold=0, italic=0, constructor=None):
        font you ask for is not available, a reasonable alternative
        may be used.
 
-       if optional contructor is provided, it must be a function with
+       if optional constructor is provided, it must be a function with
        signature constructor(fontpath, size, bold, italic) which returns
        a Font instance. If None, a pygame.freetype.Font object is created.
     """
diff --git a/lib/ftfont.py b/lib/ftfont.py
index 1b33255..ced247f 100644
--- a/lib/ftfont.py
+++ b/lib/ftfont.py
@@ -108,7 +108,7 @@ class Font(_Font):
 
     def metrics(self, text):
         """metrics(text) -> list
-           Gets the metrics for each character in the pased string."""
+           Gets the metrics for each character in the passed string."""
 
         return self.get_metrics(text)
 
@@ -168,7 +168,7 @@ def SysFont(name, size, bold=0, italic=0, constructor=None):
        font you ask for is not available, a reasonable alternative
        may be used.
 
-       if optional contructor is provided, it must be a function with
+       if optional constructor is provided, it must be a function with
        signature constructor(fontpath, size, bold, italic) which returns
        a Font instance. If None, a pygame.ftfont.Font object is created.
     """
diff --git a/lib/sprite.py b/lib/sprite.py
index 9261d05..f0a0a86 100644
--- a/lib/sprite.py
+++ b/lib/sprite.py
@@ -55,7 +55,7 @@ in the game.
 Sprites and Groups manage their relationships with the add() and remove()
 methods. These methods can accept a single or multiple group arguments for
 membership.  The default initializers for these classes also take a
-single group or list of groups as argments for initial membership. It is safe
+single group or list of groups as arguments for initial membership. It is safe
 to repeatedly add and remove the same Sprite from a Group.
 
 While it is possible to design sprite and group classes that don't derive
@@ -964,7 +964,7 @@ class LayeredDirty(LayeredUpdates):
         _use_update: True/False   (default is False)
         _default_layer: default layer where the sprites without a layer are
             added
-        _time_threshold: treshold time for switching between dirty rect mode
+        _time_threshold: threshold time for switching between dirty rect mode
             and fullscreen mode; defaults to updating at 80 frames per second,
             which is equal to 1000.0 / 80.0
 
@@ -981,7 +981,7 @@ class LayeredDirty(LayeredUpdates):
             _use_update: True/False   (default is False)
             _default_layer: default layer where the sprites without a layer are
                 added
-            _time_threshold: treshold time for switching between dirty rect
+            _time_threshold: threshold time for switching between dirty rect
                 mode and fullscreen mode; defaults to updating at 80 frames per
                 second, which is equal to 1000.0 / 80.0
 
@@ -1207,7 +1207,7 @@ class LayeredDirty(LayeredUpdates):
             sprite.dirty = 1
 
     def set_timing_treshold(self, time_ms):
-        """set the treshold in milliseconds
+        """set the threshold in milliseconds
 
         set_timing_treshold(time_ms): return None
 
diff --git a/lib/sysfont.py b/lib/sysfont.py
index 69c11af..fa5869d 100644
--- a/lib/sysfont.py
+++ b/lib/sysfont.py
@@ -269,7 +269,7 @@ def SysFont(name, size, bold=False, italic=False, constructor=None):
        font you ask for is not available, a reasonable alternative
        may be used.
 
-       if optional contructor is provided, it must be a function with
+       if optional constructor is provided, it must be a function with
        signature constructor(fontpath, size, bold, italic) which returns
        a Font instance. If None, a pygame.font.Font object is created.
     """
diff --git a/setup.py b/setup.py
index e5cc8cf..4da1a0c 100644
--- a/setup.py
+++ b/setup.py
@@ -381,7 +381,7 @@ if sys.platform == 'win32':
             if self.compiler in mingw32_compilers:
                 # Add MinGW environment variables.
                 if 'MINGW_ROOT_DIRECTORY' not in os.environ:
-                    # Use MinGW setup conifiguration file if present.
+                    # Use MinGW setup configuration file if present.
                     import mingwcfg
                     try:
                         mingw_root = mingwcfg.read()
diff --git a/src/SDL_gfx/SDL_gfxPrimitives.c b/src/SDL_gfx/SDL_gfxPrimitives.c
index 71806e2..2918f9b 100644
--- a/src/SDL_gfx/SDL_gfxPrimitives.c
+++ b/src/SDL_gfx/SDL_gfxPrimitives.c
@@ -2502,7 +2502,7 @@ This implementation of the Wu antialiasing code is based on Mike Abrash's
 DDJ article which was reprinted as Chapter 42 of his Graphics Programming
 Black Book, but has been optimized to work with SDL and utilizes 32-bit
 fixed-point arithmetic by A. Schiffler. The endpoint control allows the
-supression to draw the last pixel useful for rendering continous aa-lines
+supression to draw the last pixel useful for rendering continuous aa-lines
 with alpha<255.
 
 \param dst The surface to draw on.
@@ -6015,7 +6015,7 @@ int characterRGBA(SDL_Surface * dst, Sint16 x, Sint16 y, char c, Uint8 r, Uint8
 /*!
 \brief Draw a string in the currently set font.
 
-The spacing between consequtive characters in the string is the fixed number of pixels 
+The spacing between consecutive characters in the string is the fixed number of pixels 
 of the character width of the current global font.
 
 \param dst The surface to draw on.
diff --git a/src/_pygame.h b/src/_pygame.h
index 0fe6585..32677f9 100644
--- a/src/_pygame.h
+++ b/src/_pygame.h
@@ -547,7 +547,7 @@ typedef struct {
 
 
 /* RWOBJECT */
-/*the rwobject are only needed for C side work, not accessable from python*/
+/*the rwobject are only needed for C side work, not accessible from python*/
 #define PYGAMEAPI_RWOBJECT_FIRSTSLOT                            \
     (PYGAMEAPI_EVENT_FIRSTSLOT + PYGAMEAPI_EVENT_NUMSLOTS)
 #define PYGAMEAPI_RWOBJECT_NUMSLOTS 7
diff --git a/src/camera.h b/src/camera.h
index 26f1b2d..661081e 100644
--- a/src/camera.h
+++ b/src/camera.h
@@ -103,7 +103,7 @@ typedef struct PyCameraObject {
 #elif defined(PYGAME_MAC_CAMERA_OLD)
 typedef struct PyCameraObject {
     PyObject_HEAD
-    char* device_name;              /* unieke name of the device */
+    char* device_name;              /* unique name of the device */
     OSType pixelformat;
     unsigned int color_out;
     SeqGrabComponent component;     /* A type used by the Sequence Grabber API */
@@ -115,7 +115,7 @@ typedef struct PyCameraObject {
     int vflip;
     short depth;
     struct buffer pixels;
-    //struct buffer tmp_pixels        /* place where the flipped image in temporarly stored if hflip or vflip is true.*/
+    //struct buffer tmp_pixels        /* place where the flipped image in temporarily stored if hflip or vflip is true.*/
 } PyCameraObject;
 
 #else
diff --git a/src/camera_mac.m b/src/camera_mac.m
index 0beb307..9267db1 100644
--- a/src/camera_mac.m
+++ b/src/camera_mac.m
@@ -164,7 +164,7 @@ int mac_init_device(PyCameraObject* self) {
     theErr = SGSetChannelBounds(self->channel, &self->boundsRect);
     if (theErr != noErr) {
         PyErr_Format(PyExc_SystemError,
-        "Cannot specifie a channel's display boundary rectangle");
+        "Cannot specify a channel's display boundary rectangle");
         return 0;
     }
 	
@@ -180,7 +180,7 @@ int mac_init_device(PyCameraObject* self) {
     theErr = SGSetChannelUsage(self->channel, seqGrabPreview);
     if (theErr != noErr) {
         PyErr_Format(PyExc_SystemError,
-        "Cannot specifie how a channel is to be used by the sequence grabber componen");
+        "Cannot specify how a channel is to be used by the sequence grabber componen");
         return 0;
     }
     
@@ -334,7 +334,7 @@ int mac_read_frame(PyCameraObject* self, SDL_Surface* surf) {
     }
 }
 
-// TODO sometimes it is posible to directly grab the image in the desired pixel format,
+// TODO sometimes it is possible to directly grab the image in the desired pixel format,
 // but this format needs to be known at the beginning of the initiation of the camera.
 int mac_process_image(PyCameraObject* self, const void *image, unsigned int buffer_size, SDL_Surface* surf) {
     if (!surf)
diff --git a/src/color.c b/src/color.c
index a75819f..d3a6d55 100644
--- a/src/color.c
+++ b/src/color.c
@@ -821,7 +821,7 @@ _color_correct_gamma (PyColor *color, PyObject *args)
     frgba[3] = pow (color->data[3] / 255.0, _gamma);
 
     /* visual studio doesn't have a round func, so doing it with +.5 and
-     * truncaction */
+     * truncation */
     rgba[0] = (frgba[0] > 1.0) ? 255 : ((frgba[0] < 0.0) ? 0 :
         (Uint8) (frgba[0] * 255 + .5));
     rgba[1] = (frgba[1] > 1.0) ? 255 : ((frgba[1] < 0.0) ? 0 :
@@ -1235,7 +1235,7 @@ _color_set_hsla (PyColor *color, PyObject *value, void *closure)
 
     ht = hsla[0] / 360.f;
 
-    /* Calulate R */
+    /* Calculate R */
     h = ht + onethird;
     if (h < 0)
         h += 1;
diff --git a/src/doc/cdrom_doc.h b/src/doc/cdrom_doc.h
index 2ad70e1..30fefaf 100644
--- a/src/doc/cdrom_doc.h
+++ b/src/doc/cdrom_doc.h
@@ -43,7 +43,7 @@
 
 #define DOC_CDGETTRACKAUDIO "get_track_audio(track) -> bool\ntrue if the cdrom track has audio data"
 
-#define DOC_CDGETALL "get_all() -> [(audio, start, end, lenth), ...]\nget all track information"
+#define DOC_CDGETALL "get_all() -> [(audio, start, end, length), ...]\nget all track information"
 
 #define DOC_CDGETTRACKSTART "get_track_start(track) -> seconds\nstart time of a cdrom track"
 
@@ -143,7 +143,7 @@ pygame.cdrom.CD.get_track_audio
 true if the cdrom track has audio data
 
 pygame.cdrom.CD.get_all
- get_all() -> [(audio, start, end, lenth), ...]
+ get_all() -> [(audio, start, end, length), ...]
 get all track information
 
 pygame.cdrom.CD.get_track_start
diff --git a/src/doc/font_doc.h b/src/doc/font_doc.h
index 90388cb..b563c2e 100644
--- a/src/doc/font_doc.h
+++ b/src/doc/font_doc.h
@@ -31,7 +31,7 @@
 
 #define DOC_FONTSETITALIC "set_italic(bool) -> None\nenable fake rendering of italic text"
 
-#define DOC_FONTMETRICS "metrics(text) -> list\nGets the metrics for each character in the pased string."
+#define DOC_FONTMETRICS "metrics(text) -> list\nGets the metrics for each character in the passed string."
 
 #define DOC_FONTGETITALIC "get_italic() -> bool\ncheck if the text will be rendered italic"
 
@@ -115,7 +115,7 @@ enable fake rendering of italic text
 
 pygame.font.Font.metrics
  metrics(text) -> list
-Gets the metrics for each character in the pased string.
+Gets the metrics for each character in the passed string.
 
 pygame.font.Font.get_italic
  get_italic() -> bool
diff --git a/src/doc/freetype_doc.h b/src/doc/freetype_doc.h
index 5ab5571..41e5996 100644
--- a/src/doc/freetype_doc.h
+++ b/src/doc/freetype_doc.h
@@ -9,7 +9,7 @@
 
 #define DOC_PYGAMEFREETYPEQUIT "quit()\nShut down the underlying FreeType library."
 
-#define DOC_PYGAMEFREETYPEWASINIT "was_init() -> bool\nReturn whether the the FreeType library is initialized."
+#define DOC_PYGAMEFREETYPEWASINIT "was_init() -> bool\nReturn whether the FreeType library is initialized."
 
 #define DOC_PYGAMEFREETYPEGETCACHESIZE "get_cache_size() -> long\nReturn the glyph case size"
 
@@ -124,7 +124,7 @@ Shut down the underlying FreeType library.
 
 pygame.freetype.was_init
  was_init() -> bool
-Return whether the the FreeType library is initialized.
+Return whether the FreeType library is initialized.
 
 pygame.freetype.get_cache_size
  get_cache_size() -> long
diff --git a/src/doc/sprite_doc.h b/src/doc/sprite_doc.h
index fb9fcf6..6bb973d 100644
--- a/src/doc/sprite_doc.h
+++ b/src/doc/sprite_doc.h
@@ -95,7 +95,7 @@
 
 #define DOC_LAYEREDDIRTYCHANGELAYER "change_layer(sprite, new_layer) -> None\nchanges the layer of the sprite"
 
-#define DOC_LAYEREDDIRTYSETTIMINGTRESHOLD "set_timing_treshold(time_ms) -> None\nsets the treshold in milliseconds"
+#define DOC_LAYEREDDIRTYSETTIMINGTRESHOLD "set_timing_treshold(time_ms) -> None\nsets the threshold in milliseconds"
 
 #define DOC_PYGAMESPRITEGROUPSINGLE "GroupSingle(sprite=None) -> GroupSingle\nGroup container that holds a single sprite."
 
@@ -312,7 +312,7 @@ changes the layer of the sprite
 
 pygame.sprite.LayeredDirty.set_timing_treshold
  set_timing_treshold(time_ms) -> None
-sets the treshold in milliseconds
+sets the threshold in milliseconds
 
 pygame.sprite.GroupSingle
  GroupSingle(sprite=None) -> GroupSingle
diff --git a/src/font.c b/src/font.c
index ec2a9bc..92f2e81 100644
--- a/src/font.c
+++ b/src/font.c
@@ -437,7 +437,7 @@ font_render(PyObject* self, PyObject* args)
         return RAISE(PyExc_SDLError, TTF_GetError());
     }
     if (!aa && (bg_rgba_obj != NULL) && !just_return) {
-        /* turn off transparancy */
+        /* turn off transparency */
         SDL_SetColorKey(surf, 0, 0);
         surf->format->palette->colors[0].r = backg.r;
         surf->format->palette->colors[0].g = backg.g;
diff --git a/src/imageext.c b/src/imageext.c
index 2b89c06..cda4fdc 100644
--- a/src/imageext.c
+++ b/src/imageext.c
@@ -23,7 +23,7 @@
 
 /*
  *  extended image module for pygame, note this only has
- *  the extended load and save functions, which are autmatically used
+ *  the extended load and save functions, which are automatically used
  *  by the normal pygame.image module if it is available.
  */
 // This is temporal until PNG support is done for Symbian
diff --git a/src/math.c b/src/math.c
index b9a9963..2ee495e 100644
--- a/src/math.c
+++ b/src/math.c
@@ -403,7 +403,7 @@ _vector_find_string_helper(PyObject *str_obj, const char *substr,
  * return
  *    0 on success.
  *   -1 if conversion was unsuccessful
- *   -2 if an internal error occured and an exception was set
+ *   -2 if an internal error occurred and an exception was set
  */
 static int
 _vector_coords_from_string(PyObject *str, char **delimiter,
@@ -1281,7 +1281,7 @@ vector_slerp(PyVector *self, PyObject *args)
     tmp = (tmp < -1 ? -1 : (tmp > 1 ? 1: tmp));
     angle = acos(tmp);
 
-    /* if t < 0 we take the long arch of the greate circle to the destiny */
+    /* if t < 0 we take the long arch of the greater circle to the destiny */
     if (t < 0) {
         angle -= 2 * M_PI;
         t = -t;
diff --git a/src/mixer.c b/src/mixer.c
index aa73107..88cec9b 100644
--- a/src/mixer.c
+++ b/src/mixer.c
@@ -1014,7 +1014,7 @@ chan_set_volume (PyObject* self, PyObject* args)
     if ((stereovolume <= -1.10f) && (stereovolume >= -1.12f))
     {
         /* The normal volume will be used.  No panning.  so panning is
-         * set to full.  this is incase it was set previously to
+         * set to full.  this is in case it was set previously to
          * something else.  NOTE: there is no way to GetPanning
          * variables.
          */
diff --git a/src/pgcompat.h b/src/pgcompat.h
index bd18431..d548e86 100644
--- a/src/pgcompat.h
+++ b/src/pgcompat.h
@@ -1,4 +1,4 @@
-/* Python 2.x/3.x compitibility tools
+/* Python 2.x/3.x compatibility tools
  */
 
 #if !defined(PGCOMPAT_H)
diff --git a/src/pixelarray_methods.c b/src/pixelarray_methods.c
index 1752e3d..edd333b 100644
--- a/src/pixelarray_methods.c
+++ b/src/pixelarray_methods.c
@@ -18,7 +18,7 @@
 
 */
 
-/* Simple weighted euclidian distance, which tries to get near to the
+/* Simple weighted Euclidean distance, which tries to get near to the
  * human eye reception using the weights.
  * It receives RGB values in the range 0-255 and returns a distance
  * value between 0.0 and 1.0.
diff --git a/src/pixelcopy.c b/src/pixelcopy.c
index c47ec94..c2b16d0 100644
--- a/src/pixelcopy.c
+++ b/src/pixelcopy.c
@@ -943,7 +943,7 @@ map_array(PyObject *self, PyObject *args)
             src_strides[dim] - shape[dim + 1] * src_strides[dim + 1];
     }
 
-    /* Determine souce and destination pixel formats
+    /* Determine source and destination pixel formats
      */
     format = PySurface_AsSurface(format_surf)->format;
     pix_bytesize = format->BytesPerPixel;
diff --git a/src/rotozoom.c b/src/rotozoom.c
index 99b0e57..38f4f4d 100644
--- a/src/rotozoom.c
+++ b/src/rotozoom.c
@@ -218,7 +218,7 @@ int zoomSurfaceRGBA(SDL_Surface * src, SDL_Surface * dst, int smooth)
 
  32bit Rotozoomer with optional anti-aliasing by bilinear interpolation.
 
- Rotates and zoomes 32bit RGBA/ABGR 'src' surface to 'dst' surface.
+ Rotates and zooms 32bit RGBA/ABGR 'src' surface to 'dst' surface.
 
 */
 
@@ -384,7 +384,7 @@ void transformSurfaceRGBA(SDL_Surface * src, SDL_Surface * dst, int cx,
 
  rotozoomSurface()
 
- Rotates and zoomes a 32bit or 8bit 'src' surface to newly created 'dst' surface.
+ Rotates and zooms a 32bit or 8bit 'src' surface to newly created 'dst' surface.
  'angle' is the rotation in degrees. 'zoom' a scaling factor. If 'smooth' is 1
  then the destination 32bit surface is anti-aliased. If the surface is not 8bit
  or 32bit RGBA/ABGR it will be converted into a 32bit RGBA format on the fly.
@@ -427,7 +427,7 @@ void rotozoomSurfaceSizeTrig(int width, int height, double angle,
 }
 
 
-/* Publically available rotozoom-size function */
+/* Publicly available rotozoom-size function */
 
 void rotozoomSurfaceSize(int width, int height, double angle,
                          double zoom, int *dstwidth, int *dstheight)
@@ -475,7 +475,7 @@ void zoomSurfaceSize(int width, int height, double zoomx, double zoomy,
 }
 
 
-/* Publically available rotozoom function */
+/* Publicly available rotozoom function */
 
 SDL_Surface *rotozoomSurface(SDL_Surface * src, double angle,
                              double zoom, int smooth)
diff --git a/src/scale_mmx32.c b/src/scale_mmx32.c
index d43dc5a..582f43c 100644
--- a/src/scale_mmx32.c
+++ b/src/scale_mmx32.c
@@ -32,8 +32,8 @@
 #endif
 
 #include <stdint.h>
-typedef uint8_t Uint8;    /* SDL convension */
-typedef uint16_t Uint16;  /* SDL convension */
+typedef uint8_t Uint8;    /* SDL convention */
+typedef uint16_t Uint16;  /* SDL convention */
 #include <stdlib.h>
 #include <memory.h>
 #include "scale.h"
diff --git a/src/scale_mmx64.c b/src/scale_mmx64.c
index 71ccc14..ddf1a0d 100644
--- a/src/scale_mmx64.c
+++ b/src/scale_mmx64.c
@@ -32,8 +32,8 @@
 #endif
 
 #include <stdint.h>
-typedef uint8_t Uint8;    /* SDL convension */
-typedef uint16_t Uint16;  /* SDL convension */
+typedef uint8_t Uint8;    /* SDL convention */
+typedef uint16_t Uint16;  /* SDL convention */
 #include <stdlib.h>
 #include <memory.h>
 #include "scale.h"
diff --git a/src/scale_mmx64_gcc.c b/src/scale_mmx64_gcc.c
index f8558e0..ada8982 100644
--- a/src/scale_mmx64_gcc.c
+++ b/src/scale_mmx64_gcc.c
@@ -32,8 +32,8 @@
 #endif
 
 #include <stdint.h>
-typedef uint8_t Uint8;    /* SDL convension */
-typedef uint16_t Uint16;  /* SDL convension */
+typedef uint8_t Uint8;    /* SDL convention */
+typedef uint16_t Uint16;  /* SDL convention */
 #include <stdlib.h>
 #include <memory.h>
 #include "scale.h"
diff --git a/src/scale_mmx64_msvc.c b/src/scale_mmx64_msvc.c
index eac7c99..9a78e2d 100644
--- a/src/scale_mmx64_msvc.c
+++ b/src/scale_mmx64_msvc.c
@@ -28,8 +28,8 @@
  */
 
 #include <stdint.h>
-typedef uint8_t Uint8;    /* SDL convension */
-typedef uint16_t Uint16;  /* SDL convension */
+typedef uint8_t Uint8;    /* SDL convention */
+typedef uint16_t Uint16;  /* SDL convention */
 #include <stdlib.h>
 #include <memory.h>
 #include "scale.h"
diff --git a/src/scrap.c b/src/scrap.c
index ed06676..18aecad 100644
--- a/src/scrap.c
+++ b/src/scrap.c
@@ -296,7 +296,7 @@ _scrap_lost_scrap (PyObject* self, PyObject* args)
 #if !defined(MAC_SCRAP)
 /*
  * Sets the clipboard mode. This only works for the X11 environment, which
- * diverses between mouse selections and the clipboard.
+ * distinguishes between mouse selections and the clipboard.
  */
 static PyObject*
 _scrap_set_mode (PyObject* self, PyObject* args)
diff --git a/src/scrap_x11.c b/src/scrap_x11.c
index c8f59d8..ea66041 100644
--- a/src/scrap_x11.c
+++ b/src/scrap_x11.c
@@ -330,7 +330,7 @@ _set_targets (PyObject *data, Display *display, Window window, Atom property)
  * \param display The requesting Display.
  * \param window The requesting Window.
  * \param property The request property to place the list into.
- * \param target The target porperty to place the list into.
+ * \param target The target property to place the list into.
  * \return 0 if no data for the target is available, 1 on success.
  */
 static int
diff --git a/src/surface.c b/src/surface.c
index f1a0058..0d7ab94 100644
--- a/src/surface.c
+++ b/src/surface.c
@@ -2984,7 +2984,7 @@ surface_do_overlap (SDL_Surface *src, SDL_Rect *srcrect,
     return dstoffset < span || dstoffset > src->pitch - span;
 }
 
-/*this internal blit function is accessable through the C api*/
+/*this internal blit function is accessible through the C api*/
 int
 PySurface_Blit (PyObject * dstobj, PyObject * srcobj, SDL_Rect * dstrect,
                 SDL_Rect * srcrect, int the_args)
diff --git a/test/base_test.py b/test/base_test.py
index fff2f92..9a37691 100644
--- a/test/base_test.py
+++ b/test/base_test.py
@@ -608,7 +608,7 @@ class BaseModuleTest(unittest.TestCase):
         # get everything started. The init() functions for individual modules
         # will raise exceptions when they fail.
         #
-        # You may want to initalise the different modules seperately to speed
+        # You may want to initialise the different modules separately to speed
         # up your program or to not use things your game does not.
         #
         # It is safe to call this init() more than once: repeated calls will
diff --git a/test/cdrom_test.py b/test/cdrom_test.py
index e0447a2..a7f13e8 100644
--- a/test/cdrom_test.py
+++ b/test/cdrom_test.py
@@ -147,7 +147,7 @@ class CDTypeTest(unittest.TestCase):
 
         # __doc__ (as of 2008-08-02) for pygame.cdrom.CD.get_all:
 
-          # CD.get_all(): return [(audio, start, end, lenth), ...]
+          # CD.get_all(): return [(audio, start, end, length), ...]
           # get all track information
           # 
           # Return a list with information for every track on the cdrom. The
diff --git a/test/font_test.py b/test/font_test.py
index 6922134..5bcb35e 100644
--- a/test/font_test.py
+++ b/test/font_test.py
@@ -284,7 +284,7 @@ class FontTypeTest( unittest.TestCase ):
         # __doc__ (as of 2008-08-02) for pygame_font.Font.metrics:
 
           # Font.metrics(text): return list
-          # Gets the metrics for each character in the pased string.
+          # Gets the metrics for each character in the passed string.
           # 
           # The list contains tuples for each character, which contain the
           # minimum X offset, the maximum X offset, the minimum Y offset, the
diff --git a/test/freetype_test.py b/test/freetype_test.py
index 7f60b37..ced27ff 100644
--- a/test/freetype_test.py
+++ b/test/freetype_test.py
@@ -1078,7 +1078,7 @@ class FreeTypeFontTest(unittest.TestCase):
         except ValueError: pass
         else:   self.fail("Failed style assignement")
 
-        # make assure no assignements happened
+        # make assure no assignments happened
         self.assertEqual(ft.STYLE_NORMAL, font.style)
 
         # test assignement
diff --git a/test/math_test.py b/test/math_test.py
index fe7ef18..fbdd57f 100644
--- a/test/math_test.py
+++ b/test/math_test.py
@@ -326,7 +326,7 @@ class Vector2TypeTest(unittest.TestCase):
         # v1 is unchanged
         self.assertEqual(self.v1.x, self.l1[0])
         self.assertEqual(self.v1.y, self.l1[1])
-        # v2 is paralell to v1
+        # v2 is parallel to v1
         self.assertAlmostEqual(self.v1.x * v.y - self.v1.y * v.x, 0.)
         self.assertRaises(ValueError, lambda : self.zeroVec.normalize())
         
@@ -338,7 +338,7 @@ class Vector2TypeTest(unittest.TestCase):
         self.assertEqual(v.normalize_ip(), None)
         # length is 1
         self.assertAlmostEqual(v.x * v.x + v.y * v.y, 1.)
-        # v2 is paralell to v1
+        # v2 is parallel to v1
         self.assertAlmostEqual(self.v1.x * v.y - self.v1.y * v.x, 0.)
         self.assertRaises(ValueError, lambda : self.zeroVec.normalize_ip())
 
@@ -1181,7 +1181,7 @@ class Vector3TypeTest(unittest.TestCase):
         self.assertEqual(self.v1.x, self.l1[0])
         self.assertEqual(self.v1.y, self.l1[1])
         self.assertEqual(self.v1.z, self.l1[2])
-        # v2 is paralell to v1 (tested via cross product)
+        # v2 is parallel to v1 (tested via cross product)
         cross = ((self.v1.y * v.z - self.v1.z * v.y) ** 2 +
                  (self.v1.z * v.x - self.v1.x * v.z) ** 2 +
                  (self.v1.x * v.y - self.v1.y * v.x) ** 2)
@@ -1196,7 +1196,7 @@ class Vector3TypeTest(unittest.TestCase):
         self.assertEqual(v.normalize_ip(), None)
         # length is 1
         self.assertAlmostEqual(v.x * v.x + v.y * v.y + v.z * v.z, 1.)
-        # v2 is paralell to v1 (tested via cross product)
+        # v2 is parallel to v1 (tested via cross product)
         cross = ((self.v1.y * v.z - self.v1.z * v.y) ** 2 +
                  (self.v1.z * v.x - self.v1.x * v.z) ** 2 +
                  (self.v1.x * v.y - self.v1.y * v.x) ** 2)
diff --git a/test/mixer_test.py b/test/mixer_test.py
index c9a08d0..ad520a8 100644
--- a/test/mixer_test.py
+++ b/test/mixer_test.py
@@ -726,7 +726,7 @@ class ChannelTypeTest(unittest.TestCase):
           # Channel.get_busy(): return bool
           # check if the channel is active
           #
-          # Returns true if the channel is activily mixing sound. If the channel
+          # Returns true if the channel is activity mixing sound. If the channel
           # is idle this returns False.
           #
 
diff --git a/test/mouse_test.py b/test/mouse_test.py
index b238c65..3baeda4 100644
--- a/test/mouse_test.py
+++ b/test/mouse_test.py
@@ -61,7 +61,7 @@ class MouseModuleTest(unittest.TestCase):
           # get the mouse cursor position
           # 
           # Returns the X and Y position of the mouse cursor. The position is
-          # relative the the top-left corner of the display. The cursor position
+          # relative the top-left corner of the display. The cursor position
           # can be located outside of the display window, but is always
           # constrained to the screen.
           # 
@@ -120,7 +120,7 @@ class MouseModuleTest(unittest.TestCase):
           # sequence containing the cursor width and height. Hotspot is a
           # sequence containing the cursor hotspot position. xormasks is a
           # sequence of bytes containing the cursor xor data masks. Lastly is
-          # andmasks, a sequence of bytes containting the cursor bitmask data.
+          # andmasks, a sequence of bytes containing the cursor bitmask data.
           # 
           # Width must be a multiple of 8, and the mask arrays must be the
           # correct size for the given width and height. Otherwise an exception
diff --git a/test/surface_test.py b/test/surface_test.py
index 1d8cb62..92aaa83 100644
--- a/test/surface_test.py
+++ b/test/surface_test.py
@@ -2411,7 +2411,7 @@ class SurfaceFillTest(unittest.TestCase):
             # screen should be effected by blit opperations.
             screen.set_clip((0, 0, 320, 480))
 
-            # Test fills with each special flag, and additionaly without any.
+            # Test fills with each special flag, and additionally without any.
             screen.fill((255, 0, 0, 127), (160, 0, 320, 30), 0)
             screen.fill((255, 0, 0, 127), (160, 30, 320, 30), pygame.BLEND_ADD)
             screen.fill((0, 127, 127, 127), (160, 60, 320, 30), pygame.BLEND_SUB)
diff --git a/test/test_utils/png.py b/test/test_utils/png.py
index d0fba05..4cc610a 100644
--- a/test/test_utils/png.py
+++ b/test/test_utils/png.py
@@ -431,7 +431,7 @@ class Writer:
         ``zlib`` module is used (which is generally acceptable).
 
         If `interlace` is true then an interlaced image is created
-        (using PNG's so far only interace method, *Adam7*).  This does not
+        (using PNG's so far only interlace method, *Adam7*).  This does not
         affect how the pixels should be presented to the encoder, rather
         it changes how they are arranged into the PNG file.  On slow
         connexions interlaced images can be partially decoded by the
@@ -529,7 +529,7 @@ class Writer:
             bitdepth = int(8*bytes_per_sample)
         del bytes_per_sample
         if not isinteger(bitdepth) or bitdepth < 1 or 16 < bitdepth:
-            raise ValueError("bitdepth (%r) must be a postive integer <= 16" %
+            raise ValueError("bitdepth (%r) must be a positive integer <= 16" %
               bitdepth)
 
         self.rescale = None
@@ -1186,7 +1186,7 @@ def from_array(a, mode=None, info={}):
             if dimension in info:
                 if info[dimension] != info['size'][axis]:
                     raise Error(
-                      "info[%r] shhould match info['size'][%r]." %
+                      "info[%r] should match info['size'][%r]." %
                       (dimension, axis))
         info['width'],info['height'] = info['size']
     if 'height' not in info:
@@ -1882,7 +1882,7 @@ class Reader:
             be an iterator that yields the ``IDAT`` chunk data.
             """
 
-            # Currently, with no max_length paramter to decompress, this
+            # Currently, with no max_length parameter to decompress, this
             # routine will do one yield per IDAT chunk.  So not very
             # incremental.
             d = zlib.decompressobj()
diff --git a/test/time_test.py b/test/time_test.py
index 1a1dfa6..bb13848 100644
--- a/test/time_test.py
+++ b/test/time_test.py
@@ -170,7 +170,7 @@ class TimeModuleTest(unittest.TestCase):
           # pygame.time.get_ticks(): return milliseconds
           # get the time in milliseconds
           # 
-          # Return the number of millisconds since pygame.init() was called.
+          # Return the number of milliseconds since pygame.init() was called.
           # Before pygame is initialized this will always be 0.
           # 
 
